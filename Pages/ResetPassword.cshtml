@page
@model Spendwise_WebApp.Pages.ResetPasswordModel
@{
    Layout = "~/Pages/Shared/_InnerPage_Layout.cshtml";
}

<div class="container py-5 d-flex justify-content-center">
    <div class="card shadow rounded-4 p-4" style="max-width: 400px; width: 100%;">
        <div class="text-center mb-4">
            <h3 class="fw-semibold text-success">Reset Password</h3>
        </div>

        @if (ViewData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger text-center">@ViewData["ErrorMessage"]</div>
        }
        @if (Model.ShowFrom)
        {
            <form method="post" novalidate>
                <input type="hidden" asp-for="Email" />
                <input type="hidden" asp-for="Token" />

                <div class="mb-3">
                    <input asp-for="NewPassword" type="password" class="form-control rounded-3" />
                    <span asp-validation-for="NewPassword" class="text-danger small"></span>
                </div>

                <div class="d-grid">
                    <button type="submit" class="btn btn-success rounded-3">
                        Reset Password
                    </button>
                </div>
            </form>
        }
    </div>
</div>
@section scripts
{
<script>
    const validatePassword = (password) => {
        let passwordErrors = [];
        var specialCharPattern = @Html.Raw("new RegExp('[!@#$%^&*]')");
        if (!/[a-z]/.test(password)) {
            passwordErrors.push("a lowercase letter");
        }
        if (!/[A-Z]/.test(password)) {
            passwordErrors.push("an uppercase letter");
        }
        if (!/[0-9]/.test(password)) {
            passwordErrors.push("a number");
        }
        if (!specialCharPattern.test(password)) {
                passwordErrors.push("a special character");
        }
        if (password.length < 8) {
            passwordErrors.push("at least 8 characters");
        }

        return passwordErrors;
    };

    $("#NewPassword").on("keyup change", function() {
        const password = $(this).val() || "";
        const errors = validatePassword(password);

        const $errorSpan = $("span[data-valmsg-for='NewPassword']");
        if (errors.length > 0) {
            $errorSpan
                .html("Your password must include:<br>- " + errors.join("<br>- "))
                .show();
        } else {
            $errorSpan.text("").hide();
        }
    });
</script>
}