@page
@model Spendwise_WebApp.Pages.BuyPackage.CompanyDetailsModel
@{
    Layout = null;
}
<style>
    .address-panel {
        position: fixed;
        top: 15%;
        left: 50%;
        transform: translateX(-50%);
        width: 30%;
        background: #fff;
        border-radius: 10px;
        z-index: 2000;
        max-height: 70vh;
        overflow-y: auto;
    }

    @@media only screen and (max-width:768px) {
        .address-panel {
            width: 90%;
        }
    }

    .emailOtp {
        position: absolute;
        margin-top: -28px;
        margin-left: 35rem;
        font-size: 13px;
        font-weight: 800;
        color: red;
        cursor: pointer;
        background-color: #FFF;
        padding-left: 4px;
        padding-right: 4px;
    }

    .btnVerifyOtp {
        position: absolute;
        margin-top: -38px;
        margin-left: 13rem;
        background-color: #38761d;
        color: white;
    }

        .btnVerifyOtp:hover {
            color: white;
        }

    .otpTimer {
        margin-left: -21rem;
        margin-top: 40px;
        position: absolute;
        margin-bottom: 12px !important;
    }

    .text-address-error-message {
        width: 100%;
        clear: both;
        display: block;
        --bs-text-opacity: 1;
        color: darkred !important;
        font-weight: 700 !important;
        padding: .25rem !important;
        font-size: 12px;
        margin-top: -3px;
        margin-bottom: 5px
    }

    @@media screen and (max-width: 768px) {
        .emailOtp {
            position: absolute;
            margin-top: -28px;
            margin-left: 16rem;
            font-size: 13px;
            font-weight: 800;
            color: red;
            cursor: pointer;
            background-color: #FFF;
            padding-left: 4px;
            padding-right: 4px;
        }
        .otpTimer {
            margin-left: -12rem;
            margin-top: 40px;
            position: absolute;
            margin-bottom: 12px !important;
        }
    }
</style>
<link href="~/css/ef-core.min.css" rel="stylesheet" />
<link href="~/css/company-details.css" rel="stylesheet" />
<div id="payment-gateway">
    <input type="hidden" id="hdnIsUserLoggedIn" value="@Model.IsUserLoggedIn" />
    <input type="hidden" id="hdnUserId" value="@Model?.User?.UserID" />
    <div>
        <div class="row">
            <div id="efPageContent" class="ui-widget">

                <!-- global error -->
                <!-- end global error -->
                <!-- start payment content -->
                <div class="efPaymentDetailsWrapper">

                    <!-- stripe moto warning -->
                    <!-- payment method toggle-->
                    <div class="efPaymentOptionWrapper ef-js-payment-option-wrapper efHide ">


                        <!-- <h2 class="efPaymentMethodTitle">Payment Methods</h2> -->
                        <div class="efPaymentSelect">
                        </div>
                    </div>
                    <!-- end payment method toggle-->

                    <div class="efBillingDetails ef-js-billing-details">
                        @if (!@Model.IsUserLoggedIn)
                        {
                            <!-- new/existing customer toggle -->
                            <div class="efCustomerStatusWrapper ef-js-customer-status-wrapper customerTabDiv">
                                <div class="efCustomerTypeWrapper ef-js-customer-type-wrapper">
                                    <!-- new customer -->
                                    <input id="ef-toggle-on" class="ef-toggle ef-toggle-left ef-js-new-customer-btn ef-js-customer-type-selector efCustomerTypeSelected" name="toggle" value="false" type="radio" checked="" data-customer-type="new">
                                    <label for="ef-toggle-on" class="efCustomerType efNewCustomerLabel">New Customers</label>

                                    <!-- existing customer -->
                                    <input id="toggle-off" class="ef-toggle ef-toggle-right ef-js-existing-customer-btn ef-js-customer-type-selector" name="toggle" value="true" type="radio" data-customer-type="existing">
                                    <label for="toggle-off" class="efCustomerType efExistingCustomerLabel">Returning Customers</label>
                                </div>
                            </div>
                        }
                        <!-- end new/existing customer toggle -->
                        <!-- existing customer login -->
                        <div class="efExistingCustomer ef-js-existing-customer efHide">

                            <div class="ui-state-error efPaymentGatewayLoginError efHide ef-js-login-error">
                                <span class="ui-state-error-icon"></span>
                                <span class="ui-state-error-text">There was an error with your payment</span>
                            </div>

                            <div class="ui-state-highlight efPaymentGatewayLoginNotice efHide js-ef-login-notice">
                                <span class="ui-state-highlight-icon"></span>
                                <span class="ui-state-highlight-text">Password reset email has been sent</span>
                            </div>

                            @if (!string.IsNullOrEmpty(Model.ErrorMessage))
                            {
                                <div class="alert-danger p-2">
                                    <p><b>@Model.ErrorMessage</b></p>
                                </div>
                            }
                            @* method="post" asp-page-handler="Login" *@
                            <form class="ef-js-existing-customer-form">
                                <div class="ReturningValidationError p-3 text-danger" style="display:none;">
                                    <p>Invalid Email Address or Password.</p>
                                </div>
                                <div>
                                    <h1>Login</h1>
                                    <div class="efPaymentGatewayField">
                                        <label class="efPaymentGatewayLabel">Email:</label>
                                        <input type="text" asp-for="Email" class="form-control">
                                        <span class="text-address-error-message" id="Email_Error" style="display: none;"></span>
                                        <span class="ef-validate-icon"></span>
                                    </div>
                                    <div class="efPaymentGatewayField fileld-position">
                                        <label class="efPaymentGatewayLabel">Password:</label>
                                        <input asp-for="Password" type="password" id="password" class="form-control" autocomplete="off">
                                        <span class="text-address-error-message" id="Password_Error" style="display: none;"></span>
                                        <span class="efPasswordEyeOpenIcon ef-js-text-mask" id="showPassword" onclick="togglePassword()" style="cursor: pointer;" data-owner="efExistingPasswordInput">
                                            <svg xmlns="http://www.w3.org/2000/svg" height="20" width="20" fill="currentColor" class="bi bi-eye" viewBox="0 0 18 22">
                                                <path d="M16 8s-3-5.5-8-5.5S0 8 0 8s3 5.5 8 5.5S16 8 16 8zM1.173 8a13.133 13.133 0 0 1 1.66-2.043C4.12 4.668 5.88 3.5 8 3.5c2.12 0 3.879 1.168 5.168 2.457A13.133 13.133 0 0 1 14.828 8c-.058.087-.122.183-.195.288-.335.48-.83 1.12-1.465 1.755C11.879 11.332 10.119 12.5 8 12.5c-2.12 0-3.879-1.168-5.168-2.457A13.134 13.134 0 0 1 1.172 8z"></path>
                                                <path d="M8 5.5a2.5 2.5 0 1 0 0 5 2.5 2.5 0 0 0 0-5zM4.5 8a3.5 3.5 0 1 1 7 0 3.5 3.5 0 0 1-7 0z"></path>
                                            </svg>
                                        </span>
                                        <span class="efPasswordEyeClosedIcon ef-js-text-mask" id="hidePassword" onclick="togglePassword()" style="cursor: pointer; display: none; margin-top: 45px;" data-owner="efExistingPasswordInput">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-eye-slash" viewBox="0 0 18 22">
                                                <path d="M13.359 11.238C15.06 9.72 16 8 16 8s-3-5.5-8-5.5a7.028 7.028 0 0 0-2.79.588l.77.771A5.944 5.944 0 0 1 8 3.5c2.12 0 3.879 1.168 5.168 2.457A13.134 13.134 0 0 1 14.828 8c-.058.087-.122.183-.195.288-.335.48-.83 1.12-1.465 1.755-.165.165-.337.328-.517.486l.708.709z"></path>
                                                <path d="M11.297 9.176a3.5 3.5 0 0 0-4.474-4.474l.823.823a2.5 2.5 0 0 1 2.829 2.829l.822.822zm-2.943 1.299.822.822a3.5 3.5 0 0 1-4.474-4.474l.823.823a2.5 2.5 0 0 0 2.829 2.829z"></path>
                                                <path d="M3.35 5.47c-.18.16-.353.322-.518.487A13.134 13.134 0 0 0 1.172 8l.195.288c.335.48.83 1.12 1.465 1.755C4.121 11.332 5.881 12.5 8 12.5c.716 0 1.39-.133 2.02-.36l.77.772A7.029 7.029 0 0 1 8 13.5C3 13.5 0 8 0 8s.939-1.721 2.641-3.238l.708.709zm10.296 8.884-12-12 .708-.708 12 12-.708.708z"></path>
                                            </svg>
                                        </span>
                                        <span class="ef-validate-icon"></span>
                                    </div>
                                    <div class="efPaymentGatewayField">
                                        <label class="efPaymentGatewayLabel"></label>
                                        <a class="ef-js-forgotten-password efForgottenPassword" data-bs-toggle="modal" data-bs-target="#forgotPasswordModal">Forgotten Password?</a>
                                    </div>
                                    <div class="efPaymentGatewayField">
                                        <label class="efPaymentGatewayLabel"></label>
                                        <button type="button" onclick="doLogin()" class="btn btn-success" role="button" aria-disabled="false">Login</button>
                                        <span class="efPaymentGatewayLoader efHide ef-js-login-loader"></span>
                                    </div>
                                </div>
                                <input class="ef-js-csrf" type="hidden" name="csrf-token" value="2ed750ef6d876d665999ca8507f5dd9cfbe3e5ecbc246b53807933e77e5c59af">
                            </form>
                        </div>

                        <!-- Forgot Password Modal -->
                        <div class="modal fade" id="forgotPasswordModal" tabindex="-1" aria-labelledby="forgotPasswordModalLabel" aria-hidden="true">
                            <div class="modal-dialog">
                                <div class="modal-content">

                                    <div class="modal-header">
                                        <h5 class="modal-title" id="forgotPasswordModalLabel">Forgot Password</h5>
                                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                    </div>

                                    <div class="modal-body">
                                        <form id="forgotPasswordForm">
                                            <div class="mb-3">
                                                <label for="forgotEmail" class="form-label">Email address</label>
                                                <input type="email" class="form-control" id="txtResetPassEmail" placeholder="Enter your email" required>
                                            </div>
                                        </form>
                                    </div>

                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                        <button type="button" class="btn btn-primary" id="btnResetPass">Reset Password</button>
                                    </div>

                                </div>
                            </div>
                        </div>


                        <!-- end existing customer login -->
                        <!-- no stored card form wrapper -->
                        <span class="ef-js-billing-and-new-card-form" data-no-stored-cards="true"></span>
                        <!-- end of no stored card form wrapper -->
                        <!-- new customer details -->
                        <div class="efNewCustomerWrapper ef-js-new-customer">

                            <form action="#" method="post" class="ef-js-new-customer-form">

                                <div class="ef-js-billing-details-error efPaymentGatewayDetailsError efHide">
                                    <span class="ef-js-billing-details-error-text"></span>
                                </div>
                                @if (!Model.IsUserLoggedIn)
                                {
                                    <div class="efPaymentGatewayAccountDetails">
                                        <h2>Account Details</h2>
                                        <div class="efPaymentGatewayField">
                                            <label class="efPaymentGatewayLabel">Email</label>
                                            <input type="text" class="form-control" asp-for="User.Email" autocomplete="off">
                                            <label class="emailOtp" id="sendOtp"> </label>
                                            <span class="text-address-error-message" id="User_Email_Error" style="display: none;"></span>
                                        </div>
                                        <div class="ef-registration efPaymentGatewayField" id="otpSection" style="display: none; margin-bottom: 4rem">
                                            <label class="efPaymentGatewayLabel"> Enter Otp:</label>
                                            <div class="col-sm-7" style="margin-bottom: 8px;">
                                                <input class="form-control" type="text" id="otp" style="width: 12rem;" />
                                                <button class="btn btnVerifyOtp" id="verifyOtp"> Verify </button>
                                            </div>
                                            <span class="otpTimer" id="timer"></span>
                                        </div>
                                        <div class="efPaymentGatewayField fileld-position">
                                            <label class="efPaymentGatewayLabel">Create Password</label>
                                            <input type="password" class="form-control" asp-for="User.Password" autocomplete="off">
                                            <span class="efPasswordEyeOpenIcon ef-js-text-mask" id="showNewPassword" onclick="toggleNewPassword()" style="cursor: pointer;" data-owner="efUserPasswordInput">
                                                <svg xmlns="http://www.w3.org/2000/svg" height="20" width="20" fill="currentColor" class="bi bi-eye" viewBox="0 0 18 22">
                                                    <path d="M16 8s-3-5.5-8-5.5S0 8 0 8s3 5.5 8 5.5S16 8 16 8zM1.173 8a13.133 13.133 0 0 1 1.66-2.043C4.12 4.668 5.88 3.5 8 3.5c2.12 0 3.879 1.168 5.168 2.457A13.133 13.133 0 0 1 14.828 8c-.058.087-.122.183-.195.288-.335.48-.83 1.12-1.465 1.755C11.879 11.332 10.119 12.5 8 12.5c-2.12 0-3.879-1.168-5.168-2.457A13.134 13.134 0 0 1 1.172 8z"></path>
                                                    <path d="M8 5.5a2.5 2.5 0 1 0 0 5 2.5 2.5 0 0 0 0-5zM4.5 8a3.5 3.5 0 1 1 7 0 3.5 3.5 0 0 1-7 0z"></path>
                                                </svg>
                                            </span>
                                            <span class="efPasswordEyeClosedIcon ef-js-text-mask" id="hideNewPassword" onclick="toggleNewPassword()" style="cursor: pointer; display: none; margin-top: 45px;" data-owner="efUserPasswordInput">
                                                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-eye-slash" viewBox="0 0 18 22">
                                                    <path d="M13.359 11.238C15.06 9.72 16 8 16 8s-3-5.5-8-5.5a7.028 7.028 0 0 0-2.79.588l.77.771A5.944 5.944 0 0 1 8 3.5c2.12 0 3.879 1.168 5.168 2.457A13.134 13.134 0 0 1 14.828 8c-.058.087-.122.183-.195.288-.335.48-.83 1.12-1.465 1.755-.165.165-.337.328-.517.486l.708.709z"></path>
                                                    <path d="M11.297 9.176a3.5 3.5 0 0 0-4.474-4.474l.823.823a2.5 2.5 0 0 1 2.829 2.829l.822.822zm-2.943 1.299.822.822a3.5 3.5 0 0 1-4.474-4.474l.823.823a2.5 2.5 0 0 0 2.829 2.829z"></path>
                                                    <path d="M3.35 5.47c-.18.16-.353.322-.518.487A13.134 13.134 0 0 0 1.172 8l.195.288c.335.48.83 1.12 1.465 1.755C4.121 11.332 5.881 12.5 8 12.5c.716 0 1.39-.133 2.02-.36l.77.772A7.029 7.029 0 0 1 8 13.5C3 13.5 0 8 0 8s.939-1.721 2.641-3.238l.708.709zm10.296 8.884-12-12 .708-.708 12 12-.708.708z"></path>
                                                </svg>
                                            </span>
                                        </div>
                                        <div class="efPaymentGatewayField">
                                            <div id="password-constraints" class="efHide">
                                                <ul style="">
                                                    <li id="password-constraint-uppercase">At least one uppercase character <img src="/assets/icons/tick.png" class="efHide"> </li>
                                                    <li id="password-constraint-lowercase">At least one lowercase character <img src="/assets/icons/tick.png" class="efHide"> </li>
                                                    <li id="password-constraint-number">At least one number                 <img src="/assets/icons/tick.png" class="efHide"> </li>
                                                    <li id="password-constraint-symbol">At least one symbol                 <img src="/assets/icons/tick.png" class="efHide"> </li>
                                                    <li id="password-constraint-length">Minimum of 8 Characters             <img src="/assets/icons/tick.png" class="efHide"> </li>
                                                </ul>
                                            </div>
                                        </div>
                                    </div>
                                }

                                <div class="efPaymentGatewayBillingDetails">
                                    <h2>Billing Details</h2>
                                    <div class="efPaymentGatewayField">
                                        <label class="efPaymentGatewayLabel">Title (Mr, Mrs, Ms, etc.)</label>
                                        <input type="text" class="form-control" asp-for="User.Title" autocomplete="off">
                                    </div><div class="efPaymentGatewayFields">
                                        <div class="efPaymentGatewayField">
                                            <label class="efPaymentGatewayLabel">First name</label>
                                            <input type="text" class="form-control" asp-for="User.Forename" autocomplete="off">
                                        </div><div class="efPaymentGatewayField">
                                            <label class="efPaymentGatewayLabel">Last name(s)</label>
                                            <input type="text" class="form-control" asp-for="User.Surname" autocomplete="off">
                                        </div>
                                    </div>


                                    <div class="efPaymentGatewayField">
                                        <label class="efPaymentGatewayLabel">Phone</label>
                                        <input type="text" class="form-control" asp-for="User.PhoneNumber" autocomplete="off">
                                        <span class="text-address-error-message" id="User_PhoneNumber_Error" style="display: none;"></span>
                                    </div>
                                    <div class="efPaymentGatewayField efPaymentGatewayAddressWrapper">
                                        <div class="efPaymentGatewayAddress">
                                            <label class="efPaymentGatewayLabel">Billing Address (where card is registered)</label>
                                            <span class="efPaymentGatewayAddressText ef-js-selected-address-text">
                                                @if (Model.Address != null)
                                                {
                                                    <text>
                                                        @Model.Address.HouseName @Model.Address.Street, @Model.Address.Locality,
                                                        @Model.Address.Town, @Model.Address.County, @Model.Address.PostCode, @Model.Address.Country
                                                    </text>
                                                }
                                            </span>
                                        </div>
                                        <div class="efPaymentGatewayAddressActions">
                                            <button type="button" class="btn btn-success" role="button" aria-disabled="false" data-bs-toggle="modal" data-bs-target="#chooseAddressModal">Enter Address</button>
                                            <input type="hidden" class="ef-js-billing-address-id" name="user-address-id" value="">
                                        </div>
                                    </div>
                                </div>
                            </form>
                        </div>
                        <!-- end new customer details -->

                        <input class="ef-js-csrf" type="hidden" name="csrf-token" value="2ed750ef6d876d665999ca8507f5dd9cfbe3e5ecbc246b53807933e77e5c59af">



                    </div>

                    <!-- Bootstrap Modal -->
                    <div class="modal fade" id="chooseAddressModal" tabindex="-1" aria-labelledby="chooseAddressModalLabel" aria-hidden="true">
                        <div class="modal-dialog modal-lg modal-dialog-scrollable">
                            <div class="modal-content">

                                <!-- Modal Header -->
                                <div class="modal-header">
                                    <h5 class="modal-title" id="chooseAddressModalLabel">Choose Address</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                </div>

                                <!-- Modal Body -->
                                <div class="modal-body">
                                    <h3>Add Address</h3>
                                    <div class="efPanelContent ui-corner-bottom">
                                        <div class="form-group row">
                                            <label class="col-sm-4 col-form-label">UK Postcode Lookup:</label>
                                            <div class="col-sm-8">
                                                <input class="form-control txtPostCodeInput" type="text" value="">
                                                <button type="button" style="margin:5px 0" class="btn btn-success" onclick="postcodeLookup()" role="button" aria-disabled="false">Find Address</button>
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label class="col-sm-4 col-form-label">House Name / Number: <span class="text-danger">*</span></label>
                                            <div class="col-sm-8">
                                                <input asp-for="Address.HouseName" class="form-control" type="text">
                                                <span asp-validation-for="Address.HouseName" class="text-danger fw-bold p-1 field-msg"></span>
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label class="col-sm-4 col-form-label">Street: <span class="text-danger">*</span></label>
                                            <div class="col-sm-8">
                                                <input asp-for="Address.Street" class="form-control" type="text">
                                                <span asp-validation-for="Address.Street" class="text-danger fw-bold p-1 field-msg"></span>
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label class="col-sm-4 col-form-label">Locality:</label>
                                            <div class="col-sm-8">
                                                <input asp-for="Address.Locality" class="form-control" type="text">
                                                <span asp-validation-for="Address.Locality" class="text-danger fw-bold p-1 field-msg"></span>
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label class="col-sm-4 col-form-label">Town: <span class="text-danger">*</span></label>
                                            <div class="col-sm-8">
                                                <input asp-for="Address.Town" class="form-control" type="text">
                                                <span asp-validation-for="Address.Town" class="text-danger fw-bold p-1 field-msg"></span>
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label class="col-sm-4 col-form-label">County:</label>
                                            <div class="col-sm-8" style="margin-bottom:5px">
                                                <input asp-for="Address.County" class="form-control" type="text">
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label class="col-sm-4 col-form-label">Post Code: <span class="text-danger">*</span></label>
                                            <div class="col-sm-8">
                                                <input asp-for="Address.PostCode" class="form-control" type="text">
                                                <span asp-validation-for="Address.PostCode" class="text-danger fw-bold p-1 field-msg"></span>
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label class="col-sm-4 col-form-label">Country: <span class="text-danger">*</span></label>
                                            <div class="col-sm-8">
                                                <select style="" asp-for="Address.Country" class="ui-widget-select form-select">
                                                    <option value="Afghanistan">Afghanistan</option>
                                                    <option value="Åland Islands">Åland Islands</option>
                                                    <option value="Albania">Albania</option>
                                                    <option value="Algeria">Algeria</option>
                                                    <option value="American Samoa">American Samoa</option>
                                                    <option value="Andorra">Andorra</option>
                                                    <option value="Angola">Angola</option>
                                                    <option value="Anguilla">Anguilla</option>
                                                    <option value="Antarctica">Antarctica</option>
                                                    <option value="Antigua and Barbuda">Antigua and Barbuda</option>
                                                    <option value="Argentina">Argentina</option>
                                                    <option value="Armenia">Armenia</option>
                                                    <option value="Aruba">Aruba</option>
                                                    <option value="Australia">Australia</option>
                                                    <option value="Austria">Austria</option>
                                                    <option value="Azerbaijan">Azerbaijan</option>
                                                    <option value="Bahamas">Bahamas</option>
                                                    <option value="Bahrain">Bahrain</option>
                                                    <option value="Bangladesh">Bangladesh</option>
                                                    <option value="Barbados">Barbados</option>
                                                    <option value="Belarus">Belarus</option>
                                                    <option value="Belgium">Belgium</option>
                                                    <option value="Belize">Belize</option>
                                                    <option value="Benin">Benin</option>
                                                    <option value="Bermuda">Bermuda</option>
                                                    <option value="Bhutan">Bhutan</option>
                                                    <option value="Bolivia">Bolivia</option>
                                                    <option value="Bosnia and Herzegovina">Bosnia and Herzegovina</option>
                                                    <option value="Botswana">Botswana</option>
                                                    <option value="Bouvet Island">Bouvet Island</option>
                                                    <option value="Brazil">Brazil</option>
                                                    <option value="British Indian Ocean Territory">British Indian Ocean Territory</option>
                                                    <option value="Brunei Darussalam">Brunei Darussalam</option>
                                                    <option value="Bulgaria">Bulgaria</option>
                                                    <option value="Burkina Faso">Burkina Faso</option>
                                                    <option value="Burundi">Burundi</option>
                                                    <option value="Cambodia">Cambodia</option>
                                                    <option value="Cameroon">Cameroon</option>
                                                    <option value="Canada">Canada</option>
                                                    <option value="Cape Verde">Cape Verde</option>
                                                    <option value="Cayman Islands">Cayman Islands</option>
                                                    <option value="Central African Republic">Central African Republic</option>
                                                    <option value="Chad">Chad</option>
                                                    <option value="Chile">Chile</option>
                                                    <option value="China">China</option>
                                                    <option value="Christmas Island">Christmas Island</option>
                                                    <option value="Cocos (Keeling) Islands">Cocos (Keeling) Islands</option>
                                                    <option value="Colombia">Colombia</option>
                                                    <option value="Comoros">Comoros</option>
                                                    <option value="Congo">Congo</option>
                                                    <option value="Congo, The Democratic Republic of The">Congo, The Democratic Republic of The</option>
                                                    <option value="Cook Islands">Cook Islands</option>
                                                    <option value="Costa Rica">Costa Rica</option>
                                                    <option value="Cote D'ivoire">Cote D'ivoire</option>
                                                    <option value="Croatia">Croatia</option>
                                                    <option value="Cuba">Cuba</option>
                                                    <option value="Cyprus">Cyprus</option>
                                                    <option value="Czech Republic">Czech Republic</option>
                                                    <option value="Denmark">Denmark</option>
                                                    <option value="Djibouti">Djibouti</option>
                                                    <option value="Dominica">Dominica</option>
                                                    <option value="Dominican Republic">Dominican Republic</option>
                                                    <option value="Ecuador">Ecuador</option>
                                                    <option value="Egypt">Egypt</option>
                                                    <option value="El Salvador">El Salvador</option>
                                                    <option value="Equatorial Guinea">Equatorial Guinea</option>
                                                    <option value="Eritrea">Eritrea</option>
                                                    <option value="Estonia">Estonia</option>
                                                    <option value="Ethiopia">Ethiopia</option>
                                                    <option value="Falkland Islands (Malvinas)">Falkland Islands (Malvinas)</option>
                                                    <option value="Faroe Islands">Faroe Islands</option>
                                                    <option value="Fiji">Fiji</option>
                                                    <option value="Finland">Finland</option>
                                                    <option value="France">France</option>
                                                    <option value="French Guiana">French Guiana</option>
                                                    <option value="French Polynesia">French Polynesia</option>
                                                    <option value="French Southern Territories">French Southern Territories</option>
                                                    <option value="Gabon">Gabon</option>
                                                    <option value="Gambia">Gambia</option>
                                                    <option value="Georgia">Georgia</option>
                                                    <option value="Germany">Germany</option>
                                                    <option value="Ghana">Ghana</option>
                                                    <option value="Gibraltar">Gibraltar</option>
                                                    <option value="Greece">Greece</option>
                                                    <option value="Greenland">Greenland</option>
                                                    <option value="Grenada">Grenada</option>
                                                    <option value="Guadeloupe">Guadeloupe</option>
                                                    <option value="Guam">Guam</option>
                                                    <option value="Guatemala">Guatemala</option>
                                                    <option value="Guernsey">Guernsey</option>
                                                    <option value="Guinea">Guinea</option>
                                                    <option value="Guinea-bissau">Guinea-bissau</option>
                                                    <option value="Guyana">Guyana</option>
                                                    <option value="Haiti">Haiti</option>
                                                    <option value="Heard Island and Mcdonald Islands">Heard Island and Mcdonald Islands</option>
                                                    <option value="Holy See (Vatican City State)">Holy See (Vatican City State)</option>
                                                    <option value="Honduras">Honduras</option>
                                                    <option value="Hong Kong">Hong Kong</option>
                                                    <option value="Hungary">Hungary</option>
                                                    <option value="Iceland">Iceland</option>
                                                    <option value="India">India</option>
                                                    <option value="Indonesia">Indonesia</option>
                                                    <option value="Iran, Islamic Republic of">Iran, Islamic Republic of</option>
                                                    <option value="Iraq">Iraq</option>
                                                    <option value="Ireland">Ireland</option>
                                                    <option value="Isle of Man">Isle of Man</option>
                                                    <option value="Israel">Israel</option>
                                                    <option value="Italy">Italy</option>
                                                    <option value="Jamaica">Jamaica</option>
                                                    <option value="Japan">Japan</option>
                                                    <option value="Jersey">Jersey</option>
                                                    <option value="Jordan">Jordan</option>
                                                    <option value="Kazakhstan">Kazakhstan</option>
                                                    <option value="Kenya">Kenya</option>
                                                    <option value="Kiribati">Kiribati</option>
                                                    <option value="Korea, Democratic People's Republic of">Korea, Democratic People's Republic of</option>
                                                    <option value="Korea, Republic of">Korea, Republic of</option>
                                                    <option value="Kuwait">Kuwait</option>
                                                    <option value="Kyrgyzstan">Kyrgyzstan</option>
                                                    <option value="Lao People's Democratic Republic">Lao People's Democratic Republic</option>
                                                    <option value="Latvia">Latvia</option>
                                                    <option value="Lebanon">Lebanon</option>
                                                    <option value="Lesotho">Lesotho</option>
                                                    <option value="Liberia">Liberia</option>
                                                    <option value="Libyan Arab Jamahiriya">Libyan Arab Jamahiriya</option>
                                                    <option value="Liechtenstein">Liechtenstein</option>
                                                    <option value="Lithuania">Lithuania</option>
                                                    <option value="Luxembourg">Luxembourg</option>
                                                    <option value="Macao">Macao</option>
                                                    <option value="Macedonia, The Former Yugoslav Republic of">Macedonia, The Former Yugoslav Republic of</option>
                                                    <option value="Madagascar">Madagascar</option>
                                                    <option value="Malawi">Malawi</option>
                                                    <option value="Malaysia">Malaysia</option>
                                                    <option value="Maldives">Maldives</option>
                                                    <option value="Mali">Mali</option>
                                                    <option value="Malta">Malta</option>
                                                    <option value="Marshall Islands">Marshall Islands</option>
                                                    <option value="Martinique">Martinique</option>
                                                    <option value="Mauritania">Mauritania</option>
                                                    <option value="Mauritius">Mauritius</option>
                                                    <option value="Mayotte">Mayotte</option>
                                                    <option value="Mexico">Mexico</option>
                                                    <option value="Micronesia, Federated States of">Micronesia, Federated States of</option>
                                                    <option value="Moldova, Republic of">Moldova, Republic of</option>
                                                    <option value="Monaco">Monaco</option>
                                                    <option value="Mongolia">Mongolia</option>
                                                    <option value="Montenegro">Montenegro</option>
                                                    <option value="Montserrat">Montserrat</option>
                                                    <option value="Morocco">Morocco</option>
                                                    <option value="Mozambique">Mozambique</option>
                                                    <option value="Myanmar">Myanmar</option>
                                                    <option value="Namibia">Namibia</option>
                                                    <option value="Nauru">Nauru</option>
                                                    <option value="Nepal">Nepal</option>
                                                    <option value="Netherlands">Netherlands</option>
                                                    <option value="Netherlands Antilles">Netherlands Antilles</option>
                                                    <option value="New Caledonia">New Caledonia</option>
                                                    <option value="New Zealand">New Zealand</option>
                                                    <option value="Nicaragua">Nicaragua</option>
                                                    <option value="Niger">Niger</option>
                                                    <option value="Nigeria">Nigeria</option>
                                                    <option value="Niue">Niue</option>
                                                    <option value="Norfolk Island">Norfolk Island</option>
                                                    <option value="Northern Mariana Islands">Northern Mariana Islands</option>
                                                    <option value="Norway">Norway</option>
                                                    <option value="Oman">Oman</option>
                                                    <option value="Pakistan">Pakistan</option>
                                                    <option value="Palau">Palau</option>
                                                    <option value="Palestinian Territory, Occupied">Palestinian Territory, Occupied</option>
                                                    <option value="Panama">Panama</option>
                                                    <option value="Papua New Guinea">Papua New Guinea</option>
                                                    <option value="Paraguay">Paraguay</option>
                                                    <option value="Peru">Peru</option>
                                                    <option value="Philippines">Philippines</option>
                                                    <option value="Pitcairn">Pitcairn</option>
                                                    <option value="Poland">Poland</option>
                                                    <option value="Portugal">Portugal</option>
                                                    <option value="Puerto Rico">Puerto Rico</option>
                                                    <option value="Qatar">Qatar</option>
                                                    <option value="Reunion">Reunion</option>
                                                    <option value="Romania">Romania</option>
                                                    <option value="Russian Federation">Russian Federation</option>
                                                    <option value="Rwanda">Rwanda</option>
                                                    <option value="Saint Helena">Saint Helena</option>
                                                    <option value="Saint Kitts and Nevis">Saint Kitts and Nevis</option>
                                                    <option value="Saint Lucia">Saint Lucia</option>
                                                    <option value="Saint Pierre and Miquelon">Saint Pierre and Miquelon</option>
                                                    <option value="Saint Vincent and The Grenadines">Saint Vincent and The Grenadines</option>
                                                    <option value="Samoa">Samoa</option>
                                                    <option value="San Marino">San Marino</option>
                                                    <option value="Sao Tome and Principe">Sao Tome and Principe</option>
                                                    <option value="Saudi Arabia">Saudi Arabia</option>
                                                    <option value="Senegal">Senegal</option>
                                                    <option value="Serbia">Serbia</option>
                                                    <option value="Seychelles">Seychelles</option>
                                                    <option value="Sierra Leone">Sierra Leone</option>
                                                    <option value="Singapore">Singapore</option>
                                                    <option value="Slovakia">Slovakia</option>
                                                    <option value="Slovenia">Slovenia</option>
                                                    <option value="Solomon Islands">Solomon Islands</option>
                                                    <option value="Somalia">Somalia</option>
                                                    <option value="South Africa">South Africa</option>
                                                    <option value="South Georgia and The South Sandwich Islands">South Georgia and The South Sandwich Islands</option>
                                                    <option value="Spain">Spain</option>
                                                    <option value="Sri Lanka">Sri Lanka</option>
                                                    <option value="Sudan">Sudan</option>
                                                    <option value="Suriname">Suriname</option>
                                                    <option value="Svalbard and Jan Mayen">Svalbard and Jan Mayen</option>
                                                    <option value="Swaziland">Swaziland</option>
                                                    <option value="Sweden">Sweden</option>
                                                    <option value="Switzerland">Switzerland</option>
                                                    <option value="Syrian Arab Republic">Syrian Arab Republic</option>
                                                    <option value="Taiwan">Taiwan</option>
                                                    <option value="Tajikistan">Tajikistan</option>
                                                    <option value="Tanzania, United Republic of">Tanzania, United Republic of</option>
                                                    <option value="Thailand">Thailand</option>
                                                    <option value="Timor-leste">Timor-leste</option>
                                                    <option value="Togo">Togo</option>
                                                    <option value="Tokelau">Tokelau</option>
                                                    <option value="Tonga">Tonga</option>
                                                    <option value="Trinidad and Tobago">Trinidad and Tobago</option>
                                                    <option value="Tunisia">Tunisia</option>
                                                    <option value="Turkey">Turkey</option>
                                                    <option value="Turkmenistan">Turkmenistan</option>
                                                    <option value="Turks and Caicos Islands">Turks and Caicos Islands</option>
                                                    <option value="Tuvalu">Tuvalu</option>
                                                    <option value="Uganda">Uganda</option>
                                                    <option value="Ukraine">Ukraine</option>
                                                    <option value="United Arab Emirates">United Arab Emirates</option>
                                                    <option value="United Kingdom">United Kingdom</option>
                                                    <option value="United States">United States</option>
                                                    <option value="United States Minor Outlying Islands">United States Minor Outlying Islands</option>
                                                    <option value="Uruguay">Uruguay</option>
                                                    <option value="Uzbekistan">Uzbekistan</option>
                                                    <option value="Vanuatu">Vanuatu</option>
                                                    <option value="Venezuela">Venezuela</option>
                                                    <option value="Viet Nam">Viet Nam</option>
                                                    <option value="Virgin Islands, British">Virgin Islands, British</option>
                                                    <option value="Virgin Islands, U.S.">Virgin Islands, U.S.</option>
                                                    <option value="Wallis and Futuna">Wallis and Futuna</option>
                                                    <option value="Western Sahara">Western Sahara</option>
                                                    <option value="Yemen">Yemen</option>
                                                    <option value="Zambia">Zambia</option>
                                                    <option value="Zimbabwe">Zimbabwe</option>
                                                </select>
                                            </div>

                                        </div>
                                        <div class="form-group row text-center">&nbsp;</div>
                                        <div class="form-group row">
                                            <div class="col-sm-4 col-form-label">&nbsp;</div>
                                            <div class="col-sm-8">
                                                <button type="button" class="btn btn-success" onclick="submitAddress()">Submit Address</button>&nbsp; <button type="button" class="btn btn-light" data-bs-dismiss="modal">Close</button>
                                            </div>
                                        </div>

                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="efNewCardWrapper">
                        @if (!string.IsNullOrEmpty(Model.PaymentStatusMessage))
                        {
                            <h2>@Model.PaymentStatusMessage</h2>
                        }
                        <div class="efPaymentGatewayPayBtn efCardDetailsField">
                            <label class="efPaymentGatewayLabel"></label>
                            <button type="button" name="make-payment" class="btn btn-success" role="button" aria-disabled="false" onclick="handlePaybtn()">Pay Securely</button>
                            <span class="efPaymentGatewayLoader efHide ef-js-payment-loader"></span>
                        </div>

                    </div>
                </div>
                <!-- end payment content -->
                <!-- start cart contents -->
                <div class="efOrderContentsWrapper">

                    <div class="efOrderDefaultContents">
                        <!-- div can be empted and rendered in JS -->
                        <h1 class="efPaymentGatewayTitle">Your Basket</h1>

                        <h3 class="efPaymentGatewayOrderId">Order Ref: <span> @Model.Order.OrderId </span></h3>
                        <div class="efOrderContentsHeaders"><span>Item</span><span>Price</span></div>
                        <ul class="efOrderContentsList">
                            <li class="efOrderContentsListItem">
                                <strong>
                                    @Model.Order.PackageName
                                </strong><span class="OrderContentsListItemPrice">£@Model.SelectedPackage.Price</span>
                            </li>

                            @foreach (var item in Model.additionalPackageItems)
                            {
                                <li class="efOrderContentsListItem">
                                    @item.ItemName
                                    <span class="efOrderContentsListItemPrice">
                                        £@item.price
                                    </span>
                                </li>
                            }

                            @*<li class="efOrderContentsListItem" style="display: none;">Email Copy of Certificate of Incorporation <span class="efOrderContentsListItemPrice">£0.00</span></li>
                            <li class="efOrderContentsListItem" style="display: none;">Email Copy of Company Register with First Entries <span class="efOrderContentsListItemPrice">£0.00</span></li>
                            <li class="efOrderContentsListItem" style="display: none;">Email Copy of Draft LLP Agreement <span class="efOrderContentsListItemPrice">£0.00</span></li>
                            <li class="efOrderContentsListItem" style="display: none;">Printed Certificate of Incorporation <span class="efOrderContentsListItemPrice">£0.00</span></li>
                            <li class="efOrderContentsListItem" style="display: none;">Printed Copy of the LLP Agreement <span class="efOrderContentsListItemPrice">£0.00</span></li>
                            <li class="efOrderContentsListItem" style="display: none;">Free .com or .co.uk domain name <span class="efOrderContentsListItemPrice">£0.00</span></li>
                            <li class="efOrderContentsListItem" style="display: none;">Confirmation Statement Service <span class="efOrderContentsListItemPrice">£0.00</span></li>
                            <li class="efOrderContentsListItem" style="display: none;">Pre-Submission Review (we check your company details to avoid mistakes) <span class="efOrderContentsListItemPrice">£4.99</span></li>
                            <li class="efOrderContentsListItem" style="display: none;">Registered Office - London <span class="efOrderContentsListItemPrice">£39.00</span></li>
                            <li class="efOrderContentsListItem" style="display: none;">Companies House Incorporation Fee <span class="efOrderContentsListItemPrice">£50.00</span></li> *@
                        </ul>

                        <div class="efPaymentGatewayTotals">
                            <p class="efPaymentGatewayNetPrice">Price:&nbsp; <span id="spnPrice">£@Model.Order.NetAmount</span></p>
                            <p class="efPaymentGatewayVATPrice">VAT:&nbsp;  <span id="spnVat">£@Model.Order.VatAmount</span></p>
                            <p class="efPaymentGatewayGrossPrice">Total:&nbsp;  <span id="spnTotal">£@Model.Order.TotalAmount</span></p>
                        </div>

                        <h3 class="efPaymentGatewayAmountDuePrice">Amount Due:&nbsp;  <span id="spnAmountDue">£@Model.Order.TotalAmount</span></h3>

                        <div class="efPoweredBySt">
                            <div class="efOrderReferenceNumber">Order reference:&nbsp; <span> #@Model.Order.OrderId </span></div><div class="efOrderMerchantName">Merchant name: <span>Spendwise</span><div></div></div>
                            <div class="efPoweredByStripe">Powered by <img src="https://s3.eu-west-1.amazonaws.com/bso.media.cdn/generic/logos/stripe-logo.png" alt="Powered by Stripe"></div>
                        </div>

                    </div>



                    <div class="need-any-help"><div class="need-any-help--image"><img src="https://payments.securetrading.net/merchantfiles/525/test_bluesquareseven52541/telephone-blue.png" data-holder-rendered="true" style="width: 64px; height: 64px;"></div><div class="need-any-help--body"><h4>Do you need any help?</h4><span>Our customer service are here to help.</span><span><i class="fa fa-phone" aria-hidden="true"></i> <a href="tel:02038972233">020 3897 2233</a></span></div></div>
                </div>
                <!-- end card contents -->
                <!-- modal box-->
                <div id="ef-modal-template" class="ef-info-modal" style="display:none;">
                    <div class="ef-info-modal-content">
                        <div class="ef-info-modal-header">
                            <span class="ef-info-modal-close ef-js-info-modal-close">×</span>
                            <h2 class="ef-info-modal-title"></h2>
                        </div>
                        <div class="ef-info-modal-body">
                            <!-- Loading -->
                        </div>
                    </div>
                </div>
                <script>
                    (function (w) {
                        // set user info
                        if (typeof w.ef.user != 'undefined') {
                            w.ef.user._setUserId('1776210');
                            w.ef.user._setAuthenticated('0');
                            w.ef.user._setUsername('FQpJBrNmFRYDkGF');
                            w.ef.user._setTitle('');
                            w.ef.user._setFirstname('');
                            w.ef.user._setLastname('');
                            w.ef.user._setOrganisation('');
                            w.ef.user._setVatExempt('0');
                            w.ef.user._setAccountBalance('0.00');
                        }

                        // set cart info
                        if (typeof w.ef.user != 'undefined') {
                            w.ef.cart._setCartType('order');
                            w.ef.cart._setOrderId('4811520');
                            w.ef.cart._setTotal('59.58');
                            w.ef.cart._setVat('1.60');
                            w.ef.cart._setAmountDue('59.58');
                            w.ef.cart._setOrderDescription('Payment for Order 4811520');
                            w.ef.cart._setCartOrigin('package-buy');
                            w.ef.cart._addOrderLine({
                                'id': "41392047",
                                'qty': "1",
                                'total': "2.99",
                                'tax': "0.60",
                                'productName': "Limited by Shares Company Formation",
                            });
                            w.ef.cart._addOrderLine({
                                'id': "41392048",
                                'qty': "1",
                                'total': "0.00",
                                'tax': "0.00",
                                'productName': "Email Copy of Certificate of Incorporation",
                            });
                            w.ef.cart._addOrderLine({
                                'id': "41392049",
                                'qty': "1",
                                'total': "0.00",
                                'tax': "0.00",
                                'productName': "Email Copy of Memorandum & Articles of Association",
                            });
                            w.ef.cart._addOrderLine({
                                'id': "41392050",
                                'qty': "1",
                                'total': "0.00",
                                'tax': "0.00",
                                'productName': "Email Copy of Share Certificate(s)",
                            });
                            w.ef.cart._addOrderLine({
                                'id': "41392051",
                                'qty': "1",
                                'total': "0.00",
                                'tax': "0.00",
                                'productName': "Free .com or .co.uk domain name",
                            });
                            w.ef.cart._addOrderLine({
                                'id': "41392052",
                                'qty': "1",
                                'total': "0.00",
                                'tax': "0.00",
                                'productName': "Confirmation Statement Service",
                            });
                            w.ef.cart._addOrderLine({
                                'id': "41392053",
                                'qty': "1",
                                'total': "4.99",
                                'tax': "1.00",
                                'productName': "Pre-Submission Review (we check your company details to avoid mistakes)",
                            });
                            w.ef.cart._addOrderLine({
                                'id': "",
                                'qty': "1",
                                'total': "50.00",
                                'tax': "0.00",
                                'productName': "Companies House Incorporation Fee",
                            });
                        }
                    })(window);
                </script>
            </div>

        </div>
    </div>
</div>

@* <div class="modal fade" id="addressModal" tabindex="-1">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Select an Address</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <ul id="addressList" class="list-group address-scroll"></ul>
            </div>
        </div>
    </div>
</div> *@
<div id="addressPanel" class="address-panel shadow p-3" style="display:none;">
    <h5>Select an Address</h5>
    <ul id="PostCodeAddressList" class="list-group address-scroll mt-3"></ul>
    <button class="btn btn-secondary mt-2" onclick="closeAddressPanel()">Close</button>
</div>

<script>
    $(function () {
        function toggleCustomerPaymentView(isNewCustomer) {
            const toggleClass = (selector, add) => {
                document.querySelectorAll(selector).forEach(el => el.classList[add ? 'add' : 'remove']('efHide', 'ef-hide'));
            };

            toggleClass('.ef-js-new-customer', !isNewCustomer);
            toggleClass('.ef-js-existing-customer', isNewCustomer);
            toggleClass('.efNewCardWrapper', !isNewCustomer);
            toggleClass('#stripe-elements-payment', !isNewCustomer);
            document.querySelectorAll('.efExistingCustomer, .ef-js-existing-customer')
                .forEach(el => el.classList[isNewCustomer ? 'add' : 'remove']('ef-hide'));
        }

        $('input[name="toggle"]').on('change', function () {
            toggleCustomerPaymentView($(this).data('customer-type') === 'new');
        });

        $("#btnResetPass").click(function () {
            if ($("#txtResetPassEmail").val() != "") {
                $.ajax({
                    type: "GET",
                    url: "/login?handler=ForgotPassword&customerEmail=" + encodeURIComponent($("#txtResetPassEmail").val()),
                    success: function (isAvailable) {
                        $("#resEmail").text($("#txtResetPassEmail").val());
                        $("#divResetinput").hide();
                        $("#divLinkSent").show();
                        $("#btnResetPass").hide();
                    },
                    error: function () {
                        console.log("Error checking company name.");
                    }
                });
            }
            else {
                showToast('please enter email address!.', 'warning');
            }
        });

    });

    function doLogin() {
        var isValid = true;

        // Clear previous errors
        $(".text-danger").remove();


        var email = $("#Email").val()?.trim();

        var emailPattern = @Html.Raw(@"/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/");

        if (email === "") {
            isValid = false;
            $("#Email_Error").text("Email is required.").show();
        } else if (!emailPattern.test(email)) {
            isValid = false;
            $("#Email_Error").text("Invalid email format.").show();
        } else {
            $("#Email_Error").text("").hide();
        }

        // Field validation helper
        function validateField(id, errorId, fieldName) {
            const value = $(id).val()?.trim();
            if (value === "") {
                isValid = false;
                $(errorId).text(`${fieldName} is required.`).show();
            } else {
                $(errorId).text("").hide();
            }
        }

        // Validate each required field
        validateField("#password", "#Password_Error", "Password");


        if (isValid) {
            $.ajax({
                url: "/BuyPackage/CompanyDetails?handler=Login",
                method: "POST",
                data: {
                    Email: $("#Email").val(),
                    Password: $("#password").val()
                },
                success: function (response) {
                    if (response.success === false) {
                        showToast(response.message, 'danger');
    @* alert(response.message); *@
                                    } else {
                        // Redirect using the returned orderId and token
                        const orderId = response.orderId;
                        const token = response.token;

                        // Build the redirect URL
                        const redirectUrl = `/BuyPackage?id=${orderId}&token=${token}`;
                        window.location.href = redirectUrl;
                    }
                },
                error: function (xhr) {
                    console.error("Error:", xhr.statusText, xhr.responseText);
                }
            });

        }
    }

    let emailVerify = false;

    function handlePaybtn() {
        var isValid = true;
        var userEmail = Cookies.get("UserEmail");
        // Clear previous errors
        $(".text-danger").remove();

        var email = $("#User_Email").val()?.trim();
        var phone = $("#User_PhoneNumber").val()?.trim();

        var emailPattern = @Html.Raw(@"/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/");
        var phonePattern = /^\d{10}$/;

        // Field validation helper
        function validateField(id, fieldName) {
            var value = $(id).val().trim();
            if (value === "") {
                isValid = false;
                $(id).after('<small class="text-danger">' + fieldName + ' is required.</small>');
            }

        }
        // Validate each required field
        if (!userEmail) {
            // Email validation
            if (email === "") {
                isValid = false;
                $("#User_Email_Error").text("Email is required.").show();
                showToast('Please filled required details.', 'warning');
            } else if (!emailPattern.test(email)) {
                isValid = false;
                $("#User_Email_Error").text("Invalid email format.").show();
                showToast('Invalid email format.', 'warning');
            } else {
                $("#User_Email_Error").text("").hide();
            }
            validateField("#User_Password", "Password");
        }
        validateField("#User_Title", "Title");
        validateField("#User_Forename", "First Name");
        validateField("#User_Surname", "Last Name");

        if (phone === "") {
            isValid = false;
            $("#User_PhoneNumber_Error").text("Phone number is required.").show();
            showToast('Please filled required details.', 'warning');
        } else if (!phonePattern.test(phone)) {
            isValid = false;
            $("#User_PhoneNumber_Error").text("Phone number must be 10 digits.").show();
            showToast('Phone number must be 10 digits.', 'warning');
        } else {
            $("#User_PhoneNumber_Error").text("").hide();
        }

        var addressText = $(".efPaymentGatewayAddressText").text().trim();
        if (!addressText) {
            isValid = false;
            $(".efPaymentGatewayAddressText").after('<small class="text-danger">Address is required.</small>');
        }

        if (isValid) {
            var UserData = {
                Email: $("#User_Email").val(),
                Password: $("#User_Password").val(),
                Title: $("#User_Title").val(),
                Forename: $("#User_Forename").val(),
                Surname: $("#User_Surname").val(),
                PhoneNumber: $("#User_PhoneNumber").val()
            };

            var addressData = {
                HouseName: $("#Address_HouseName").val(),
                Street: $("#Address_Street").val(),
                Locality: $("#Address_Locality").val(),
                Town: $("#Address_Town").val(),
                County: $("#Address_County").val(),
                PostCode: $("#Address_PostCode").val(),
                Country: $("#Address_Country").val()
            }
            const UserPayloadData = {
                UserData: UserData,
                address: addressData
            };

            console.log("UserData =", UserData);
            if (!userEmail) {
                if (emailVerify == false) {
                    showToast("Please Verify your Email!", "warning");
                }
                else {
                    $.ajax({
                        url: "/BuyPackage/CompanyDetails?handler=CreateNewUser",
                        method: "POST",
                        contentType: "application/json",
                        data: JSON.stringify(UserPayloadData),
                        success: function (response) {
                            console.log("Success:", response);
                            if (response.success === false) {
                                showToast(response.message, 'danger');
                            } else {
                                // Continue with your success logic
                                console.log("User created:", response);
                                const orderId = response.orderId;
                                const token = response.token;

                                $.ajax({
                                    type: "GET",
                                    url: "/BuyPackage/CompanyDetails?handler=SetupPayment",
                                    success: function (result) {
                                        if (result.success) {
                                            // Open the hosted payment page in a new tab (standard practice for HPP)
                                            window.open(result.paymentPageUrl, "_blank");
                                        } else {
                                            console.log("Error from SetupPaymentAsync:", result.message);
                                            alert("Error setting up payment: " + result.message);
                                        }
                                    },
                                    error: function (xhr, status, error) {
                                        console.log("AJAX error:", error);
                                        alert("An unexpected error occurred. Please try again.");
                                    }
                                });
                                // Build the redirect URL
    @* const redirectUrl = `/FormationPage/Company-Formation`;
                                    window.location.href = redirectUrl; *@
                                        }
                        },
                        error: function (xhr) {
                            console.error("Error:", xhr.statusText, xhr.responseText);
                        }
                    });
                }
            }
            else if (Cookies.get("BillingAddress")) {
                $.ajax({
                    url: "/BuyPackage/CompanyDetails?handler=UpdateUserBillingAddress",
                    method: "POST",
                    contentType: "application/json",
                    data: JSON.stringify(addressData),
                    success: function (response) {
                        console.log("Success:", response);
                        if (response.success === false) {
                            showToast(response.message, 'danger');
                        } else {
                            // Continue with your success logic
                            console.log("User created:", response);
                            const orderId = response.orderId;
                            const token = response.token;

                            // Build the redirect URL
    @* const redirectUrl = `/FormationPage/Company-Formation`;
                                window.location.href = redirectUrl; *@
                                $.ajax({
                                    type: "GET",
                                    url: "/BuyPackage/CompanyDetails?handler=SetupPayment",
                                    success: function (result) {
                                        if (result.success) {
                                            // Open the hosted payment page in a new tab (standard practice for HPP)
                                            window.open(result.paymentPageUrl, "_blank");
                                        } else {
                                            console.log("Error from SetupPaymentAsync:", result.message);
                                            alert("Error setting up payment: " + result.message);
                                        }
                                    },
                                    error: function (xhr, status, error) {
                                        console.log("AJAX error:", error);
                                        alert("An unexpected error occurred. Please try again.");
                                    }
                                });
                        }
                    },
                    error: function (xhr) {
                        console.error("Error:", xhr.statusText, xhr.responseText);
                    }
                });
            }
            else {
    @*  const redirectUrl = `/FormationPage/Company-Formation`;
                    window.location.href = redirectUrl; *@
                    $.ajax({
                        type: "GET",
                        url: "/BuyPackage/CompanyDetails?handler=SetupPayment",
                        success: function (result) {
                            if (result.success) {
                                // Open the hosted payment page in a new tab (standard practice for HPP)
                                window.open(result.paymentPageUrl, "_blank");
                            } else {
                                console.log("Error from SetupPaymentAsync:", result.message);
                                alert("Error setting up payment: " + result.message);
                            }
                        },
                        error: function (xhr, status, error) {
                            console.log("AJAX error:", error);
                            alert("An unexpected error occurred. Please try again.");
                        }
                    });
            }
        }
    }

    function submitAddress() {
        var isValid = true;

        // Clear previous errors
        $(".text-danger").remove();

        // Field validation helper
        function validateField(id, fieldName) {
            var value = $(id).val()?.trim();
            if (value === "") {
                isValid = false;
                $(id).after('<small class="text-danger">' + fieldName + ' is required.</small>');
            }
        }

        // Validate each required field
        validateField("#Address_HouseName", "House Name");
        validateField("#Address_Street", "Street");
        validateField("#Address_Town", "Town");
        validateField("#Address_PostCode", "Post Code");
        validateField("#Address_Country", "Country");

        if (isValid) {
            var AddressData = {
                HouseName: $("#Address_HouseName").val(),
                Street: $("#Address_Street").val(),
                Locality: $("#Address_Locality").val(),
                Town: $("#Address_Town").val(),
                County: $("#Address_County").val(),
                PostCode: $("#Address_PostCode").val(),
                Country: $("#Address_Country").val()
            };
            const expires = 7 ? { expires: 7, secure: true, sameSite: 'None' } : {};
            Cookies.set("BillingAddress", true, expires);
            $("#chooseAddressModal").modal('hide');
            var SelectedAddress = AddressData.HouseName + "," + AddressData.Street + "," + AddressData.Locality + "," + AddressData.Town
                + "," + AddressData.County + "," + AddressData.PostCode + "," + AddressData.Country;
            $(".efPaymentGatewayAddressText").html(SelectedAddress);
        }
    }

    function togglePassword() {
        var passwordField = document.getElementById("password");
        var showPasswordIcon = document.getElementById("showPassword");
        var hidePasswordIcon = document.getElementById("hidePassword");

        if (passwordField.type === "password") {
            passwordField.type = "text";
            showPasswordIcon.style.display = "none";
            hidePasswordIcon.style.display = "inline";
        } else {
            passwordField.type = "password";
            showPasswordIcon.style.display = "inline";
            hidePasswordIcon.style.display = "none";
        }
    }

    function toggleNewPassword() {
        var passwordField = document.getElementById("User_Password");
        var showPasswordIcon = document.getElementById("showNewPassword");
        var hidePasswordIcon = document.getElementById("hideNewPassword");

        if (passwordField.type === "password") {
            passwordField.type = "text";
            showPasswordIcon.style.display = "none";
            hidePasswordIcon.style.display = "inline";
        } else {
            passwordField.type = "password";
            showPasswordIcon.style.display = "inline";
            hidePasswordIcon.style.display = "none";
        }
    }

    function postcodeLookup() {
        const postCode = $(".txtPostCodeInput").val();

        if (!postCode) {
            alert("Please enter a postcode.");
            return;
        }

        $.ajax({
            type: "GET",
            url: `/register?handler=CheckPostCode&postCode=${encodeURIComponent(postCode)}`,
            dataType: "json",
            success: function (response) {
                if (!response.success || !Array.isArray(response.suggestions)) {
                    alert("No suggestions found.");
                    return;
                }
                console.log("response", response);
                console.log("response.suggestions", response.suggestions);

                populateAddressList(response.suggestions);
            },
            error: function (xhr) {
                console.error("AJAX error:", xhr);
                alert("Error fetching postcode suggestions.");
            }
        });
    }

    function populateAddressList(suggestions) {
        const list = document.getElementById("PostCodeAddressList");
        list.innerHTML = ''; // Clear previous items

        suggestions.forEach(item => {
            const li = document.createElement("li");
            li.className = "list-group-item d-flex justify-content-between align-items-center";

            const addressText = document.createElement("span");
            addressText.textContent = item.address;

            const selectBtn = document.createElement("button");
            selectBtn.className = "btn btn-success btn-sm";
            selectBtn.textContent = "Select";
            selectBtn.dataset.addressId = item.id;

            // 👇 API call on select
            selectBtn.onclick = function () {
                const id = this.dataset.addressId;
                const apiKey = 'k2fpqS_lSUeh0z2ISb57ng45543'; // Replace with actual or server-stored key
                const url = `https://api.getaddress.io/get/${id}?api-key=${apiKey}`;

                fetch(url)
                    .then(response => response.json())
                    .then(data => {
                        console.log("Full address data:", data);
                        bindAddressToForm(data);
                        //bootstrap.Modal.getInstance(document.getElementById('addressModal')).hide();
                        closeAddressPanel();
                    })
                    .catch(err => {
                        console.error("Error fetching full address:", err);
                        alert("Unable to fetch full address details.");
                    });
            };

            li.appendChild(addressText);
            li.appendChild(selectBtn);
            list.appendChild(li);
        });

        //new bootstrap.Modal(document.getElementById('addressModal')).show();
        showAddressPanel();
    }

    function showAddressPanel() {
        document.getElementById('addressPanel').style.display = 'block';
    }

    function closeAddressPanel() {
        document.getElementById('addressPanel').style.display = 'none';
    }

    function bindAddressToForm(data) {

        if (!data) return;
        console.log("data", data);
        //const lines = data.line_1.split(' ');

        document.getElementById('Address_HouseName').value = data.building_number || '';
        document.getElementById('Address_Street').value = data.line_1.trim().replace(data.building_number, '').trim(); //lines[1] + ' ' + lines[2]?.trim() || '';
        document.getElementById('Address_Town').value = data.town_or_city || '';
        document.getElementById('Address_County').value = data.county || '';
        document.getElementById('Address_PostCode').value = data.postcode || '';
        if (data.country == "England") {
            document.getElementById('Address_Country').value = "United Kingdom";
        }
        else {
            document.getElementById('Address_Country').value = data.country || '';
        }
    }

    $(".emailOtp").html("Verify");
    let countdown;
    let timerSeconds = 60;

    function startTimer() {
        clearInterval(countdown);
        $("#timer").text(`OTP is expired in ${timerSeconds}s`);
        $(".emailOtp").html("Verify");

        countdown = setInterval(function () {
            timerSeconds--;
            if (timerSeconds <= 0) {
                clearInterval(countdown);
                $("#timer").text("OTP is expired.");
                $(".emailOtp").html("Resend");
            }
            else {
                $("#timer").text(`OTP is expired in ${timerSeconds}s`);
            }
        }, 1000);
    }

    $("#sendOtp").click(function () {
        var isValid = true;
        var email = $("#User_Email").val();

        var emailPattern = @Html.Raw(@"/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/");

        // Email validation
        if (email === "") {
            isValid = false;
            $("#User_Email_Error").text("Email is required.").show();
        } else if (!emailPattern.test(email)) {
            isValid = false;
            $("#User_Email_Error").text("Invalid email format.").show();
        } else {
            $("#User_Email_Error").text("").hide();
        }

        if (isValid) {
            $.ajax({
                url: "/BuyPackage/CompanyDetails?handler=SendOtp",
                type: "POST",
                data: JSON.stringify({ email: email }),
                contentType: "application/json",
                success: function (res) {
                    if (res.success) {
                        showToast("OTP sent to email!", "success");
                        $("#otpSection").show();
                        timerSeconds = 60;
                        startTimer();
                    } else {
                        showToast("Error sending OTP.", "danger");
                    }
                }
            });
        }
    });

    $("#verifyOtp").click(function (e) {
        e.preventDefault();
        var email = $("#User_Email").val();
        var otp = $("#otp").val();

        if (timerSeconds <= 0) {
            showToast("Please Resend your OTP.", "warning");
        }
        else {
            $.ajax({
                url: "/BuyPackage/CompanyDetails?handler=VerifyOtp",
                type: "POST",
                data: JSON.stringify({ email: email, otp: otp }),
                contentType: "application/json",
                success: function (res) {
                    if (res.success) {
                        emailVerify = true;
                        showToast("Email verified successfully!", "success");
                        clearInterval(countdown);
                        $(".emailOtp").html("Verified").css({ "color": "green", "cursor": "none" });
                        $("#otpSection").hide();
                    } else {
                        showToast("Invalid OTP.", "danger");
                        clearInterval(countdown);
                        $("#timer").text("");
                        $(".emailOtp").html("Resend");
                    }
                }
            });
        }
    });
</script>
