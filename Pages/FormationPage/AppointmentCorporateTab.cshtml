@page
@model Spendwise_WebApp.Pages.FormationPage.AppointmentCorporateTabModel
@{
    Layout = null;
    var selected = Model.CorporateSelectedPosition;
}
@{
    var RegisteredOfficeAddress = Model.CorporateAddressList.Where(x => x.IsRegisteredOffice == true && x.CompanyId == Model.Company.CompanyId && x.IsCurrent == true).FirstOrDefault();
}

<div class="ef-panel-wrapper" id="appCorporateTab">
    <div class="head-04" id="ef-panel-title">
        <h1>Appointments</h1>
    </div>
    <div class="" id="ef-panel-content">
        <div id="ef-panel-inner-content">
            <div id="ef-global-officer-error" class="ef-primary-error-msg ef-alert-box fail" style="display:none;">
                <div class="ef-alert-box-main-text main-error-text" id="">Sorry, there was an error on this page.</div>
            </div>
            <div class="w-tabs" id="ef-officer-form-wrapper">
                <!-- start tabs -->
                @* <div class="w-tab-menu ef-officer-form-tab-menu ef-corporate-tab">
                    <a class="tab-link w-tab-link w-inline-block" aria-current="page" data-target="#corporate-position">
                        <div> Position </div>
                    </a>
                    <a class="tab-link w-tab-link w-inline-block" data-target="#corporate-details">
                        <div> Details </div>
                    </a>
                </div> *@
                <!-- end tabs -->
                <div id="scrollContainer">
                    <div class="tab-pane current">
                        <div id="corporate-position" class="appointment-section">
                            <div class="w-tab-content">
                                <div class="w-tab-pane w--tab-active ef-tab-pane-position" data-tab="position">
                                    <div class="head-01">
                                        <h1>Position</h1>
                                    </div>
                                    <div class="ef-information-box">
                                        <h2 class="ef-information-box-title">Directors and Shareholders</h2>
                                        <p>A limited company must have at least one director and one shareholder. One person may hold both of these positions. </p>
                                        <h2 class="ef-information-box-title icon">Persons with Significant Control (PSCs)</h2>
                                        <p>Any person who ultimately controls more than 25% of the company is a Person with Significant Control (PSC). </p>
                                        <p><b>It is now a legal requirement to identify the PSCs of a company. Please tick the Person with Significant Control (PSC) box if you qualify as a PSC of this company (see below).</b></p>
                                        <p>A Person with Significant Control (PSC) is anyone who meets one or more of the following conditions: </p>
                                        <ul>
                                            <li>owns more than 25% of the company’s shares.</li>
                                            <li>holds more than 25% of the company’s voting rights.</li>
                                            <li>holds the right to appoint or remove the majority of directors.</li>
                                            <li>has the right to, or actually exercises significant influence or control.</li>
                                            <li>holds the right to exercise or actually exercises significant control over a trust or company that meets one of the first 4 conditions.</li>
                                        </ul>
                                        <h3>Am I a PSC?</h3>
                                        <p>If you are a shareholder with more than 25% of the company's shares - yes, you are a PSC, and you should also <b>tick the Person with Significant Control (PSC) box below</b>. </p>
                                    </div>
                                    <div style="display:none; font-size: 20px;" class="ef-alert-box fail" id="position-error">
                                    </div>
                                    <div class="ef-form-wrap">
                                        <h2>Choose Position</h2>
                                        <div class="hr-line-1"></div>
                                        <p class="officer-extra-text mr-bot-30 fs-14 lh-18">Please tick all boxes that are relevant to this person. If this person is to hold more than one position, eg. Will be a director, shareholder and PSC, make all appointments now, by ticking 3 boxes.</p>
                                        <div class="role-select-wrapper">
                                            <div class="w-row row-role-select">
                                                <div class="w-col">
                                                    <div class="w-checkbox">
                                                        <input class="w-checkbox-input" type="checkbox" id="isCorporateDirector" value="Director" @(selected.Contains("Director") ? "checked" : "") />
                                                        <label class="w-form-label" for="officer-topdog">Director</label>
                                                        <span class="ef-modal-help-icon" data-ref="HELP|TOP_DOG_LBS"><img class="ef-help-icon-img" src="/assets/icons/help.png"></span>
                                                    </div>
                                                </div>
                                                <div class="w-col">
                                                    <div class="w-checkbox">
                                                        <input class="w-checkbox-input" type="checkbox" id="isCorporateShareholder" value="Shareholder" @(selected.Contains("Shareholder") ? "checked" : "") />
                                                        <label class="w-form-label" for="officer-holder">Shareholder</label>
                                                        <span class="ef-modal-help-icon" data-ref="HELP|HOLDER_LBS"><img class="ef-help-icon-img" src="/assets/icons/help.png"></span>
                                                    </div>
                                                </div>
                                                <div class="w-col">
                                                    <div class="w-checkbox">
                                                        <input class="w-checkbox-input" type="checkbox" id="isCorporateSecretary" value="Secretary" @(selected.Contains("Secretary") ? "checked" : "") />
                                                        <label class="w-form-label" for="officer-secretary">Secretary</label>
                                                        <span class="ef-modal-help-icon" data-ref="HELP|SECRETARY"><img class="ef-help-icon-img" src="/assets/icons/help.png"></span>
                                                    </div>
                                                </div>
                                                <div class="w-col">
                                                    <div class="w-checkbox">
                                                        <input class="w-checkbox-input" type="checkbox" id="isCorporatePSC" value="PSC" @(selected.Contains("PSC") ? "checked" : "") />
                                                        <label class="w-form-label" for="officer-PSC">Person with Significant Control (PSC)</label>
                                                        <span class="ef-modal-help-icon" data-ref="HELP|PSC"><img class="ef-help-icon-img" src="/assets/icons/help.png"></span>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="w-row">&nbsp;</div>
                                @* <div class="w-row">
                                    <div class="w-col">
                                        <button type="button" id="corporate-position-tab" class="ef-btn ef-corporate-save">Save</button>
                                    </div>
                                </div> *@
                            </div>
                        </div>

                        <div id="corporate-details" class="appointment-section" style="border-bottom: none;">
                            <div class="w-tab-pane ef-tab-pane-details" data-tab="Tab 3" style="display: block;">
                                <div class="head-02">
                                    <h1> Details </h1>
                                </div>
                                <div class="ef-information-box">
                                    <h2 class="ef-information-box-title">Personal Details</h2>
                                    <p>It is recommended you enter your name as it appears on your ID, eg. passport or drivers licence.</p>
                                </div>
                                <div style="display:none;" class="ef-alert-box fail" id="details-error">
                                    <div id="" class="ef-alert-box-main-text main-error-text">Please complete all required details.</div>
                                </div>
                                <div style="display:none; font-size: 20px;" class="ef-alert-box fail" id="address-error"> </div>
                                <div id="officer-details-div">
                                    <div class="ef-form-wrap">
                                        <h2 id="preselected-officer">
                                            Officer Details
                                        </h2>
                                        <div class="hr-line-1"></div>
                                        <div class="w-row row-margin">
                                            <div class="w-col w-col-7" style="">
                                                <div id="officer-title-wrapper">
                                                    <div id="officer-label-wrapper">
                                                        <h3>Authoriser Details</h3>
                                                    </div>
                                                    <input type="hidden" asp-for="CorporateOfficers.CorporateOfficerId" />
                                                    <div class="ef-autocomplete-wrapper">
                                                        <label class="field-label" for="officer-title">Title</label>
                                                        <input class="w-input" type="text" placeholder="Title" asp-for="CorporateOfficers.Title" />
                                                        <span class="text-address-error-message" id="CorporateOfficers_Title_error" style="display: none;"></span>
                                                    </div>
                                                </div>
                                                <div id="officer-firstname-wrapper">
                                                    <label class="field-label" for="officer-firstname">First name(s)</label>
                                                    <input class="w-input" type="text" placeholder="First name" asp-for="CorporateOfficers.FirstName" />
                                                    <span class="text-address-error-message" id="CorporateOfficers_FirstName_error" style="display: none;"></span>
                                                </div>
                                                <div id="officer-lastname-wrapper">
                                                    <label class="field-label" for="officer-lastname">Last name</label>
                                                    <input class="w-input" type="text" placeholder="Last name" asp-for="CorporateOfficers.LastName" />
                                                    <span class="text-address-error-message" id="CorporateOfficers_LastName_error" style="display: none;"></span>
                                                </div>
                                            </div>
                                            <div class="w-col w-col-7">
                                                <div id="officer-label-wrapper">
                                                    <h3>Corporate Details</h3>
                                                </div>
                                                <div id="officer-corporate-name-wrapper">
                                                    <label class="field-label" for="officer-corporate-name">Legal Name</label>
                                                    <input class="w-input" type="text" placeholder="Legal Name" asp-for="CorporateOfficers.LegalName" />
                                                    <span class="text-address-error-message" id="CorporateOfficers_LegalName_error" style="display: none;"></span>
                                                </div>
                                                <div id="officer-corporate-is-uk-status-wrapper">
                                                    <label class="field-label" for="officer-corporate-is-uk-status">
                                                        Registered in the UK ?
                                                    </label>
                                                    <div class="officer-corporate-is-uk-answers">
                                                        <span style="margin-right: 10px;">
                                                            <input type="radio" id="officer-corporate-is-uk-status" @(Model.CorporateRegisteredInUk == "1" ? "checked" : "") class="w-radio officer-corporate-is-uk-status" value="1" style="display: inline-block">
                                                            <label style="display: inline-block" class="field-label" for="officer-corporate-is-uk-status-1">Yes</label>
                                                        </span>
                                                        <span>
                                                            <input type="radio" id="officer-corporate-is-uk-status" @(Model.CorporateRegisteredInUk == "0" ? "checked" : "") class="w-radio officer-corporate-is-uk-status" value="0" style="display: inline-block">
                                                            <label class="field-label" style="display: inline-block" for="officer-corporate-is-uk-status-0">No</label>
                                                        </span>
                                                    </div>
                                                </div>
                                                <!-- start is uk data -->
                                                <div id="officer-is-uk-questions-wrapper" style="">
                                                    <div class="officer-corporate-reg-no-wrapper officer-corporate-is-uk-question">
                                                        <label class="field-label" for="officer-corporate-reg-no">Registration Number  </label>
                                                        <input type="text" class="w-input officer-corporate-reg-no ef-js-officer-optional-qs" placeholder="Registration Number" asp-for="CorporateOfficers.RegistrationNumber" />
                                                        <span class="text-address-error-message" id="CorporateOfficers_RegistrationNumber_error" style="display: none;"></span>
                                                    </div>
                                                    <div class="officer-corporate-place-reg-wrapper officer-corporate-is-uk-question">
                                                        <label class="field-label" for="officer-corporate-place-reg">Place Registered </label>
                                                        <input type="text" class="w-input officer-corporate-place-reg ef-js-officer-optional-qs" asp-for="CorporateOfficers.PlaceRegistered" placeholder="Example: England" />
                                                        <span class="text-address-error-message" id="CorporateOfficers_PlaceRegistered_error" style="display: none;"></span>
                                                    </div>
                                                    <!-- required is a PSC -->
                                                    <div class="officer-corporate-psc-place-reg-wrapper officer-corporate-is-uk-question">
                                                        <label class="field-label" for="officer-corporate-psc-place-reg">Registry Held </label>
                                                        <input type="text" class="w-input officer-corporate-psc-place-reg ef-js-officer-optional-qs" asp-for="CorporateOfficers.RegistryHeld" placeholder="Example: Companies House" />
                                                        <span class="text-address-error-message" id="CorporateOfficers_RegistryHeld_error" style="display: none;"></span>
                                                    </div>
                                                    <div class="officer-corporate-law-gov-wrapper officer-corporate-is-uk-question">
                                                        <label class="field-label" for="officer-corporate-law-gov">Law Governed</label>
                                                        <input class="w-input" type="text" placeholder="Law Governed" asp-for="CorporateOfficers.LawGoverned" />
                                                        <span class="text-address-error-message" id="CorporateOfficers_LawGoverned_error" style="display: none;"></span>
                                                    </div>
                                                    <div class="officer-corporate-legal-form-wrapper officer-corporate-is-uk-question">
                                                        <label class="field-label" for="officer-corporate-legal-form">Legal Form</label>
                                                        <input class="w-input" type="text" placeholder="Legal Form" asp-for="CorporateOfficers.LegalForm" />
                                                        <span class="text-address-error-message" id="CorporateOfficers_LegalForm_error" style="display: none;"></span>
                                                    </div>
                                                </div>
                                                <!-- / end is uk data -->
                                            </div>
                                            <div class="w-row">&nbsp;</div>
                                            <!-- start res address -->
                                            <div class="w-col w-col-12" id="residential-address-wrapper">
                                                <h3 for="officer-residential-address">Address</h3>
                                                <span class="residential-address-help-text mr-bot-20 block"><strong>Please Note: Please supply the registered office address of the corporate entity. This address does not need to be in the UK.</strong></span>
                                                <div class="ef-item-box ef-selected">
                                                    <div class="ef-item-content">
                                                        <div class="w-row ef-panel-row">
                                                            <button type="button" class="ef-btn ef-select-btn" id="ExsistingAddress" onclick="showUserAddressPanel()">
                                                                Recently used addresses
                                                            </button>
                                                            <button type="button" class="ef-btn ef-select-btn" id="openPersonSecondModal" onclick="openAddressModal()">
                                                                New Address
                                                            </button>
                                                            <div class="w-col w-col-8" style="margin-top: 10px;">
                                                                <div class="">
                                                                    <span class="registered-forwarding-address">
                                                                        @if (RegisteredOfficeAddress != null)
                                                                        {
                                                                            @($"{RegisteredOfficeAddress.HouseName} {RegisteredOfficeAddress.Street}, {RegisteredOfficeAddress.Town}, {RegisteredOfficeAddress.County}, {RegisteredOfficeAddress.PostCode}, {RegisteredOfficeAddress.Country}")
                                                                        }
                                                                    </span>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div>
                                        @if (Model.CorporateOfficersList != null && Model.CorporateOfficersList.Count > 0)
                                        {
                                            <label for="selectType" class="currentAppointment"> Corporate Officer List </label>
                                            <p> Below is a list of officers currently assigned to your company. </p>
                                            <table id="ef-current-appointments-table" class="ef-primary-table table">
                                                <tbody>
                                                    <tr>
                                                        <th> Name </th>
                                                        <th> Director </th>
                                                        <th> Shareholder </th>
                                                        <th> Secretary </th>
                                                        <th> PSC </th>
                                                        <th></th>
                                                    </tr>
                                                    @foreach (var item in Model.CorporateOfficersList)
                                                    {
                                                        var position = item.PositionName?.Split(',') ?? Array.Empty<string>();
                                                        <tr class="w-row-even">
                                                            <td>
                                                                @item.FirstName @item.LastName
                                                            </td>
                                                            <td>
                                                                @(position.Contains("Director") ? "✔" : "❌")
                                                            </td>
                                                            <td>
                                                                @(position.Contains("Shareholder") ? "✔" : "❌")
                                                            </td>
                                                            <td>
                                                                @(position.Contains("Secretary") ? "✔" : "❌")
                                                            </td>
                                                            <td>
                                                                @(position.Contains("PSC") ? "✔" : "❌")
                                                            </td>
                                                            <td>
                                                                <span style="">
                                                                    <button type="button" class="ef-remove-officer" onclick="btnRemoveCorporateOfficer(@item.CorporateOfficerId)">Remove</button>
                                                                    <button type="button" class="ef-edit-officer" onclick='editCorporateOfficer(@Html.Raw(Json.Serialize(item)))'>Edit</button>
                                                                </span>
                                                            </td>
                                                        </tr>
                                                    }
                                                </tbody>
                                            </table>
                                        }
                                    </div>
                                </div>
                                <div class="w-row">&nbsp;</div>
                                <div class="w-row">
                                    <div class="w-col">
                                        <button type="button" class="btn btn-success" onclick="btnBackToMainPage()">Back</button>
                                        <button type="button" id="goToCorporateNextTab" class="ef-btn ef-next-btn "> Next </button>
                                        <button type="button" id="addNewCorporateOfficer" class="ef-btn ef-new-btn"> Add New Corporate Officer </button>
                                        <button type="button" id="corporate-submit-details-tab" class="ef-btn ef-app-submit-btn"> Save Corporate Officer</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@* Choose Address Modal *@
@* <div class="modal fade" id="corporateAddressModal" tabindex="-1" aria-labelledby="addressModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-scrollable">
        <div class="modal-content">

            <!-- Modal Header -->
            <div class="modal-header">
                <h5 class="modal-title" id="addressModalLabel">Forwarding Address</h5>
                <p>Tell us where to forward your mail to you, by entering your address below.</p>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            <!-- Modal Body -->
            <div class="modal-body">
                <div id="an-address" class="ef-address-form" style="">
                    <div>
                        <div id="use-previous-address-or-search" class="address-form-div" style="display:block">
                            <h4>Recently used addresses</h4>

                            <div id="serviceAddressSection" class="address-section">
                                @foreach (var item in Model.CorporateAddressList)
                                {
                                    <div class="w-clearfix simple-row-elem">
                                        <div class="w-row ef-panel-row">
                                            <div class="w-col w-col-8">
                                                <p>@item.HouseName, @item.Street, @item.Town, @item.County, @item.PostCode, @item.Country</p>
                                            </div>
                                            <div class="w-col w-col-4 w-clearfix add-col">
                                                <button type="button" class="ef-btn ef-alt-address-btn" onclick='editCorporateAddress(@Html.Raw(Json.Serialize(item)))'>Edit</button>
                                                <button type="button" class="ef-btn ef-select-btn" onclick='selectCorporateAddress(@Html.Raw(Json.Serialize(item)))'>Select</button>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>

                            <h4>Or enter a new Address</h4>

                            <div class="w-clearfix simple-row-elem">
                                <div class="w-row ef-panel-row">
                                    <div class="w-col w-col-8">
                                        <p>Enter new Address</p>
                                    </div>
                                    <div class="w-col w-col-4 w-clearfix add-col">

                                        <!-- <span class="ef-btn ef-primary-btn ef-alt-btn ef-cancel-address" onclick="javascript:void(0)" >Cancel</span>-->
                                        <button type="button" class="ef-btn ef-select-btn" id="openCoporateSecondModal">Select</button>

                                    </div>
                                </div>

                            </div>

                            <div lass="ef-cancel-btn-wrapper">
                                <div class="w-clearfix">
                                    <button type="button" class="ef-btn ef-cancel-address" data-bs-dismiss="modal">Cancel</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div> *@

<div class="modal fade" id="inCorporateSecondAddressModal" tabindex="-1" aria-labelledby="addressModalLabel" aria-hidden="true">
    <input type="hidden" id="hndAddressType" name="hndAddressType" value="" />
    <div class="modal-dialog modal-lg modal-dialog-scrollable">
        <div class="modal-content">

            <!-- Modal Header -->
            <div class="modal-header">
                <div class="address-modal">
                    <h5 class="modal-title" id="addressModalLabel">Forwarding Address</h5>
                    <p>Tell us where to forward your mail to you, by entering your address below.</p>
                </div>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            <!-- Modal Body -->
            <div class="modal-body">
                <div style="" class="address-form-div w-clearfix" id="an-address-form" name="an-address-form">
                    <div class="w-row row-margin ef-postcode-lookup-wrapper">
                        <div class="w-col w-col-6">
                            <label for="postcode-lookup">Post Code</label>
                            <input class="w-input postal-lookup postcode" id="corporate-postcode-lookup" type="text" placeholder="Enter your postal code" name="postcode-lookup">
                        </div>
                        <div class="w-col w-col-3">
                            <label for="postcode-lookup">&nbsp;</label>
                            <button type="button" class="ef-add-btn ef-postcode-lookup-btn" onclick="appointmentPostCodeLookup()">Find Address</button>
                        </div>
                    </div>

                    <input type="hidden" asp-for="CorporateAddress.AddressId" />

                    <label for="address-line-1">Name/Number <span>*</span></label>
                    <input class="w-input" asp-for="CorporateAddress.HouseName" type="text" placeholder="Enter House Name/Number" />
                    <span class="text-address-error-message" id="CorporateAddress_HouseName_error" style="display: none;"></span>

                    <label for="address-line-2">Street <span>*</span></label>
                    <input class="w-input" asp-for="CorporateAddress.Street" type="text" placeholder="Enter Street" />
                    <span class="text-address-error-message" id="CorporateAddress_Street_error" style="display: none;"></span>

                    <label for="address-line-3">Locality</label>
                    <input class="w-input" asp-for="CorporateAddress.Locality" type="text" placeholder="Enter Locality" />

                    <label for="address-line-4">Town <span>*</span></label>
                    <input class="w-input" asp-for="CorporateAddress.Town" type="text" placeholder="Enter Town" />
                    <span class="text-address-error-message" id="CorporateAddress_Town_error" style="display: none;"></span>

                    <label for="address-line-5" class="address-line-5">County</label>
                    <input class="w-input address-line-5" asp-for="CorporateAddress.County" type="text" placeholder="Enter County" />

                    <div class="w-row last-margin">
                        <div class="w-col w-col-6 ef-country-col">
                            <label for="address-country">Country <span>*</span></label>
                            <select class="w-select" asp-for="CorporateAddress.Country">
                                <option value="AFGHANISTAN">Afghanistan</option>
                                <option value="ALBANIA">Albania</option>
                                <option value="ALGERIA">Algeria</option>
                                <option value="ANDORRA">Andorra</option>
                                <option value="ANGOLA">Angola</option>
                                <option value="ARGENTINA">Argentina</option>
                                <option value="ARMENIA">Armenia</option>
                                <option value="AUSTRALIA">Australia</option>
                                <option value="AUSTRIA">Austria</option>
                                <option value="AZERBAIJAN">Azerbaijan</option>
                                <option value="BAHAMAS">Bahamas</option>
                                <option value="BAHRAIN">Bahrain</option>
                                <option value="BANGLADESH">Bangladesh</option>
                                <option value="BELARUS">Belarus</option>
                                <option value="BELGIUM">Belgium</option>
                                <option value="BELIZE">Belize</option>
                                <option value="BENIN">Benin</option>
                                <option value="BHUTAN">Bhutan</option>
                                <option value="BOLIVIA">Bolivia</option>
                                <option value="BOSNIA AND HERZEGOVINA">Bosnia and Herzegovina</option>
                                <option value="BOTSWANA">Botswana</option>
                                <option value="BRAZIL">Brazil</option>
                                <option value="BRUNEI">Brunei</option>
                                <option value="BULGARIA">Bulgaria</option>
                                <option value="BURKINA FASO">Burkina Faso</option>
                                <option value="BURUNDI">Burundi</option>
                                <option value="CAMBODIA">Cambodia</option>
                                <option value="CAMEROON">Cameroon</option>
                                <option value="CANADA">Canada</option>
                                <option value="CHILE">Chile</option>
                                <option value="CHINA">China</option>
                                <option value="COLOMBIA">Colombia</option>
                                <option value="COSTA RICA">Costa Rica</option>
                                <option value="CROATIA">Croatia</option>
                                <option value="CYPRUS">Cyprus</option>
                                <option value="CZECH REPUBLIC">Czech Republic</option>
                                <option value="DENMARK">Denmark</option>
                                <option value="EGYPT">Egypt</option>
                                <option value="ESTONIA">Estonia</option>
                                <option value="FINLAND">Finland</option>
                                <option value="FRANCE">France</option>
                                <option value="GEORGIA">Georgia</option>
                                <option value="GERMANY">Germany</option>
                                <option value="GHANA">Ghana</option>
                                <option value="GREECE">Greece</option>
                                <option value="HONG KONG">Hong Kong</option>
                                <option value="HUNGARY">Hungary</option>
                                <option value="ICELAND">Iceland</option>
                                <option value="INDIA">India</option>
                                <option value="INDONESIA">Indonesia</option>
                                <option value="IRAN">Iran</option>
                                <option value="IRAQ">Iraq</option>
                                <option value="IRELAND">Ireland</option>
                                <option value="ISRAEL">Israel</option>
                                <option value="ITALY">Italy</option>
                                <option value="JAPAN">Japan</option>
                                <option value="JORDAN">Jordan</option>
                                <option value="KENYA">Kenya</option>
                                <option value="KUWAIT">Kuwait</option>
                                <option value="LATVIA">Latvia</option>
                                <option value="LEBANON">Lebanon</option>
                                <option value="LITHUANIA">Lithuania</option>
                                <option value="LUXEMBOURG">Luxembourg</option>
                                <option value="MALAYSIA">Malaysia</option>
                                <option value="MALTA">Malta</option>
                                <option value="MEXICO">Mexico</option>
                                <option value="MOROCCO">Morocco</option>
                                <option value="NEPAL">Nepal</option>
                                <option value="NETHERLANDS">Netherlands</option>
                                <option value="NEW ZEALAND">New Zealand</option>
                                <option value="NIGERIA">Nigeria</option>
                                <option value="NORWAY">Norway</option>
                                <option value="PAKISTAN">Pakistan</option>
                                <option value="PHILIPPINES">Philippines</option>
                                <option value="POLAND">Poland</option>
                                <option value="PORTUGAL">Portugal</option>
                                <option value="QATAR">Qatar</option>
                                <option value="ROMANIA">Romania</option>
                                <option value="RUSSIA">Russia</option>
                                <option value="SAUDI ARABIA">Saudi Arabia</option>
                                <option value="SINGAPORE">Singapore</option>
                                <option value="SLOVAKIA">Slovakia</option>
                                <option value="SLOVENIA">Slovenia</option>
                                <option value="SOUTH AFRICA">South Africa</option>
                                <option value="SOUTH KOREA">South Korea</option>
                                <option value="SPAIN">Spain</option>
                                <option value="SRI LANKA">Sri Lanka</option>
                                <option value="SWEDEN">Sweden</option>
                                <option value="SWITZERLAND">Switzerland</option>
                                <option value="SYRIA">Syria</option>
                                <option value="TAIWAN">Taiwan</option>
                                <option value="THAILAND">Thailand</option>
                                <option value="TUNISIA">Tunisia</option>
                                <option value="TURKEY">Turkey</option>
                                <option value="UGANDA">Uganda</option>
                                <option value="UKRAINE">Ukraine</option>
                                <option value="UNITED ARAB EMIRATES">United Arab Emirates</option>
                                <option value="UNITED KINGDOM">United Kingdom</option>
                                <option value="UNITED STATES">United States</option>
                                <option value="URUGUAY">Uruguay</option>
                                <option value="VIETNAM">Vietnam</option>
                                <option value="YEMEN">Yemen</option>
                                <option value="ZAMBIA">Zambia</option>
                                <option value="ZIMBABWE">Zimbabwe</option>
                            </select>
                        </div>

                        <div class="w-col w-col-6 postcode-col">
                            <label for="address-postcode" id="address-postcode-label">
                                Postal Code
                                <span>
                                    *
                                </span>
                            </label>
                            <input class="w-input postcode" asp-for="CorporateAddress.PostCode" type="text" placeholder="Enter Postcode" />
                            <span class="text-address-error-message" id="CorporateAddress_PostCode_error" style="display: none;"></span>
                        </div>
                    </div>
                    <button type="button" class="ef-add-btn ef-cancel-forward-address" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="ef-add-btn ef-save-address-btn" onclick="saveChooseAddressData()">Save &amp; Continue</button>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="addressPanel" class="address-panel shadow p-3" style="display:none;">
    <h5>Select an Address</h5>
    <ul id="PostCodeAddressList" class="list-group address-scroll mt-3"></ul>
    <button class="btn btn-secondary mt-2" onclick="closeAddressPanel()">Close</button>
</div>

<div id="corporateAddressPanel" class="address-panel shadow p-3" style="display:none;">
    <h5>Select an Address</h5>
    <button class="btn btn-secondary mt-2" onclick="CloseCorporateAddressPanel()">Close</button>
    <ul id="ulRegisteredAdd" style="display:none;">
        @foreach (var item in Model.CorporateAddressList.Where(x => x.IsRegisteredOffice))
        {
            <li class="list-group-item d-flex justify-content-between align-items-center">
                <span>
                    @item.HouseName @item.Street, @item.Town, @item.County, @item.PostCode, @item.Country
                </span>
                <button type="button"
                        class="btn btn-success btn-sm"
                        onclick='selectCorporateAddress(@Html.Raw(Json.Serialize(item)))'>
                    Select
                </button>
            </li>
        }
    </ul>
</div>

<script>
    $(document).ready(function () {
        document.getElementById('goToCorporateNextTab').style.display = 'none';
        document.getElementById('addNewCorporateOfficer').style.display = 'none';
        $('#CorporateOfficers_CorporateOfficerId').val('');
        $('#isCorporateDirector').prop('checked', false);
        $('#isCorporateShareholder').prop('checked', false);
        $('#isCorporateSecretary').prop('checked', false);
        $('#isCorporatePSC').prop('checked', false);
        $('#CorporateOfficers_Title').val('');
        $('#CorporateOfficers_FirstName').val('');
        $('#CorporateOfficers_LastName').val('');
        $('#CorporateOfficers_LegalName').val('');
        $('.officer-corporate-is-uk-status').prop('checked', false);
        $('#CorporateOfficers_RegistrationNumber').val('');
        $('#CorporateOfficers_PlaceRegistered').val('');
        $('#CorporateOfficers_RegistryHeld').val('');
        $('#CorporateOfficers_LawGoverned').val('');
        $('#CorporateOfficers_LegalForm').val('');
    });

    // $("#corporate-position-tab").click(function () {
    //     var selectedData = [];
    //     $(".w-checkbox-input:checked").each(function () {
    //         selectedData.push($(this).val());
    //     });

    //     if (selectedData?.length === 0) {
    //         $("#position-error").html("Please select the Position.").show();
    //     }
    //     else {
    //         $("#position-error").html("Please select the Position.").hide();
    //     }

    //     const selectedPosition = selectedData.join(",");

    //     $.ajax({
    //         url: "/FormationPage/AppointmentCorporateTab?handler=SaveCorporatePositionData",
    //         method: "POST",
    //         contentType: "application/json",
    //         data: JSON.stringify({ position: selectedPosition }),
    //         success: function (response) {
    //             if (response.success) {
    //                 showToast('Position Data Saved.', 'success');
    //                 console.log(response.success);
    //             }
    //         },
    //         error: function (xhr) {
    //             console.error("Error:", xhr.statusText, xhr.responseText);
    //         }
    //     });
    // });

    $("#corporate-submit-details-tab").click(function () {
        var isValid = true;
        var selectedData = [];
        $(".w-checkbox-input:checked").each(function () {
            selectedData.push($(this).val());
        });
        var registeredlHouseName = "@(RegisteredOfficeAddress?.HouseName ?? "")";


        if($("#CorporateAddress_HouseName").val() == "" && registeredlHouseName == "") {
            isValid = false;
            $("#address-error").html("Please select the Registered Address.").show();
            showToast('Please filled required details.', 'warning');
            $('html, body').scrollTop($('#corporate-details').offset().top);
        }
        else {
            isValid = true;
            $("#address-error").html("Please select the Registered Address.").hide();
        }

        if (selectedData?.length === 0) {
            isValid = false;
            $("#position-error").html("Please select the Position.").show();
            showToast('Please filled required details.', 'warning');
            $('html, body').scrollTop($('#corporate-position').offset().top);
        }
        else {
            isValid = true;
            $("#position-error").html("Please select the Position.").hide();
        }

        // Field validation helper
        function validateField(id, errorId, fieldName) {
            const value = $(id).val().trim();
            if (value === "") {
                isValid = false;
                $(errorId).text(`${fieldName} is required.`).show();
                showToast('Please filled required details.', 'warning');
                $('html, body').scrollTop($('#corporate-details').offset().top);
            } else {
                $(errorId).text("").hide();
            }
        }

        validateField("#CorporateOfficers_Title", "#CorporateOfficers_Title_error", "Title");
        validateField("#CorporateOfficers_FirstName", "#CorporateOfficers_FirstName_error", "FirstName");
        validateField("#CorporateOfficers_LastName", "#CorporateOfficers_LastName_error", "LastName");
        validateField("#CorporateOfficers_LegalName", "#CorporateOfficers_LegalName_error", "LegalName");
        validateField("#CorporateOfficers_RegistrationNumber", "#CorporateOfficers_RegistrationNumber_error", "RegistrationNumber");
        validateField("#CorporateOfficers_PlaceRegistered", "#CorporateOfficers_PlaceRegistered_error", "PlaceRegistered");
        validateField("#CorporateOfficers_RegistryHeld", "#CorporateOfficers_RegistryHeld_error", "RegistryHeld");
        validateField("#CorporateOfficers_LawGoverned", "#CorporateOfficers_LawGoverned_error", "LawGoverned");
        validateField("#CorporateOfficers_LegalForm", "#CorporateOfficers_LegalForm_error", "LegalForm");

        if (isValid) {
            const selectedPosition = selectedData.join(",");

            var formData = {
                CorporateOfficerId: $('#CorporateOfficers_CorporateOfficerId').val() || 0,
                Title: $('#CorporateOfficers_Title').val(),
                FirstName: $('#CorporateOfficers_FirstName').val(),
                LastName: $('#CorporateOfficers_LastName').val(),
                LegalName: $('#CorporateOfficers_LegalName').val(),
                RegisteredInUK: $('#officer-corporate-is-uk-status:checked').val(),
                RegistrationNumber: $('#CorporateOfficers_RegistrationNumber').val(),
                PlaceRegistered: $('#CorporateOfficers_PlaceRegistered').val(),
                RegistryHeld: $('#CorporateOfficers_RegistryHeld').val(),
                LawGoverned: $('#CorporateOfficers_LawGoverned').val(),
                LegalForm: $('#CorporateOfficers_LegalForm').val(),
            }

             var payload = {
                Officer: formData,
                SelectedPosition: selectedPosition
            };

            $.ajax({
                url: "/FormationPage/AppointmentCorporateTab?handler=SaveCorporateDetails",
                method: "POST",
                contentType: "application/json",
                data: JSON.stringify(payload),
                success: function (response) {
                    if (response.success) {
                        let officerId = response.officerId;
                        saveCorporateChooseAddressData(officerId);

                        setTimeout(function() {
                            showToast('Data Saved.', 'success');
                        }, 500);

                        document.getElementById('goToCorporateNextTab').style.display = 'block';
                        document.getElementById('addNewCorporateOfficer').style.display = 'block';
                    }
                },
                error: function (xhr) {
                    console.error("Error:", xhr.statusText, xhr.responseText);
                }
            });
        }
    });

    $("#addNewCorporateOfficer").click(function () {
        $('#isCorporateDirector').prop('checked', false);
        $('#isCorporateShareholder').prop('checked', false);
        $('#isCorporateSecretary').prop('checked', false);
        $('#isCorporatePSC').prop('checked', false);
        $('#CorporateOfficers_Title').val('');
        $('#CorporateOfficers_FirstName').val('');
        $('#CorporateOfficers_LastName').val('');
        $('#CorporateOfficers_LegalName').val('');
        $('.officer-corporate-is-uk-status').prop('checked', false);
        $('#CorporateOfficers_RegistrationNumber').val('');
        $('#CorporateOfficers_PlaceRegistered').val('');
        $('#CorporateOfficers_RegistryHeld').val('');
        $('#CorporateOfficers_LawGoverned').val('');
        $('#CorporateOfficers_LegalForm').val('');
        $('html, body').scrollTop($('#appCorporateTab').offset().top);
    });

    $("#goToCorporateNextTab").click(function () {
        window.location.reload();
        $('html, body').scrollTop($('#appointment').offset().top);
    });

    function openAddressModal(type) {
        // Set the type: "Registered" or "Business"
        $('#inCorporateSecondAddressModal').find("input").val("");
        $('#hndAddressType').val(type);
        $('#inCorporateSecondAddressModal').modal('show');
    }

    // Open Second Modal
    $('#openCoporateSecondModal').on('click', function () {
        $('#addressModal').modal('hide');

        $('#addressModal').on('hidden.bs.modal', function () {
            $('#inCorporateSecondAddressModal').modal('show');
        });
    });

    let registeredAddressData = null;

    function saveChooseAddressData() {
        var isValid = true;

        // Field validation helper
        function validateFields(id, errorId, fieldName) {
            const value = $(id).val().trim();
            if (value === "") {
                isValid = false;
                $(errorId).text(`${fieldName} is required.`).show();
            } else {
                $(errorId).text("").hide();
            }
        }

        validateFields("#CorporateAddress_HouseName", "#CorporateAddress_HouseName_error", "House Name");
        validateFields("#CorporateAddress_Street", "#CorporateAddress_Street_error", "Street");
        validateFields("#CorporateAddress_Town", "#CorporateAddress_Town_error", "Town");
        validateFields("#CorporateAddress_PostCode", "#CorporateAddress_PostCode_error", "Postcode");

        const addressData = {
            addressId: parseInt($("#CorporateAddress_AddressId").val()) || 0,
            houseName: $("#CorporateAddress_HouseName").val(),
            street: $("#CorporateAddress_Street").val(),
            postCode: $("#CorporateAddress_PostCode").val(),
            town: $("#CorporateAddress_Town").val(),
            country: $("#CorporateAddress_Country").val(),
            county: $("#CorporateAddress_County").val(),
            locality: $("#CorporateAddress_Locality").val()
        };

        if (isValid) {
            registeredAddressData = addressData;
            $(".registered-forwarding-address").html("");
            const houseName = $("#CorporateAddress_HouseName").val();
            const otherParts = [
                $("#CorporateAddress_Street").val(),
                $("#CorporateAddress_Town").val(),
                $("#CorporateAddress_County").val(),
                $("#CorporateAddress_PostCode").val(),
                $("#CorporateAddress_Country").val()
            ].filter(Boolean);
            const addressHtml = (houseName ? houseName + ' ' : '') + otherParts.join(', ');
            $(".registered-forwarding-address").html(addressHtml);

            $("#inCorporateSecondAddressModal").modal("hide");
        }
    }

    function saveCorporateChooseAddressData(officerId) {
        const registeredAddress = {
            houseName: "@(RegisteredOfficeAddress?.HouseName ?? "")",
            street: "@(RegisteredOfficeAddress?.Street ?? "")",
            postCode: "@(RegisteredOfficeAddress?.PostCode ?? "")",
            town: "@(RegisteredOfficeAddress?.Town ?? "")",
            country: "@(RegisteredOfficeAddress?.Country ?? "")",
            county: "@(RegisteredOfficeAddress?.County ?? "")",
            locality: "@(RegisteredOfficeAddress?.Locality ?? "")",
        };

        const saveCorporateAddress = (data, handler) => {
            if (!data) return;

            data.officerId = officerId;

            $.ajax({
                url: `/FormationPage/AppointmentCorporateTab?handler=${handler}`,
                method: "POST",
                contentType: "application/json",
                data: JSON.stringify(data),
                success: function (response) {
                    if (!response.success) {
                        for (const [field, message] of Object.entries(response.errors)) {
                            const errorSpan = document.getElementById(`${field}-error`);
                            if (errorSpan) errorSpan.textContent = message;
                        }
                    } else {
                        console.log(`${handler} saved`);
                    }
                },
                error: function (xhr) {
                    console.error("Error saving address:", xhr.statusText, xhr.responseText);
                }
            });
        };

        if($("#CorporateAddress_HouseName").val() == "" && $("#CorporateAddress_Street").val() == ""){
            registeredAddressData = registeredAddress;
        }

        saveCorporateAddress(registeredAddressData, "SaveCorporateAddress");
    }

    function editCorporateAddress(data) {
        $("#CorporateAddress_AddressId").val(data.addressId); // Ensure your model has Id

        $("#CorporateAddress_HouseName").val(data.houseName);
        $("#CorporateAddress_Street").val(data.street);
        $("#CorporateAddress_Locality").val(data.locality);
        $("#CorporateAddress_Town").val(data.town);
        $("#CorporateAddress_County").val(data.county);
        $("#CorporateAddress_Country").val(data.country);
        $("#CorporateAddress_PostCode").val(data.postCode);

        // Clear error messages
        $(".text-address-error-message").hide().text("");

        $("#inCorporateSecondAddressModal").modal("show");
    }

    function selectCorporateAddress(data) {
        const addressHtml = `${data.houseName}, ${data.street}, ${data.town}, ${data.county}, ${data.postCode}, ${data.country}`;
        $(".registered-forwarding-address").html(addressHtml);

        $("#CorporateAddress_HouseName").val(data.houseName);
        $("#CorporateAddress_Street").val(data.street);
        $("#CorporateAddress_Locality").val(data.locality);
        $("#CorporateAddress_Town").val(data.town);
        $("#CorporateAddress_County").val(data.county);
        $("#CorporateAddress_Country").val(data.country);
        $("#CorporateAddress_PostCode").val(data.postCode);
        CloseCorporateAddressPanel();
    }

    function appointmentPostCodeLookup() {
        const postCode = $("#corporate-postcode-lookup").val();

        if (!postCode) {
            alert("Please enter a postcode.");
            return;
        }

        $.ajax({
            type: "GET",
            url: `/register?handler=CheckPostCode&postCode=${encodeURIComponent(postCode)}`,
            dataType: "json",
            success: function (response) {
                if (!response.success || !Array.isArray(response.suggestions)) {
                    alert("No suggestions found.");
                    return;
                }
                console.log("response", response);
                console.log("response.suggestions", response.suggestions);

                populateAddressList(response.suggestions);
            },
            error: function (xhr) {
                console.error("AJAX error:", xhr);
                alert("Error fetching postcode suggestions.");
            }
        });
    }

    function populateAddressList(suggestions) {
        const list = document.getElementById("PostCodeAddressList");
        list.innerHTML = ''; // Clear previous items

        suggestions.forEach(item => {
            const li = document.createElement("li");
            li.className = "list-group-item d-flex justify-content-between align-items-center";

            const addressText = document.createElement("span");
            addressText.textContent = item.address;

            const selectBtn = document.createElement("button");
            selectBtn.className = "btn btn-success btn-sm";
            selectBtn.textContent = "Select";
            selectBtn.dataset.addressId = item.id;

            // 👇 API call on select
            selectBtn.onclick = function () {
                const id = this.dataset.addressId;
                const apiKey = 'k2fpqS_lSUeh0z2ISb57ng45543'; // Replace with actual or server-stored key
                const url = `https://api.getaddress.io/get/${id}?api-key=${apiKey}`;

                fetch(url)
                    .then(response => response.json())
                    .then(data => {
                        console.log("Full address data:", data);
                        bindAddressToForm(data);
                        //bootstrap.Modal.getInstance(document.getElementById('addressModal')).hide();
                        closeAddressPanel();
                    })
                    .catch(err => {
                        console.error("Error fetching full address:", err);
                        alert("Unable to fetch full address details.");
                    });
            };

            li.appendChild(addressText);
            li.appendChild(selectBtn);
            list.appendChild(li);
        });

        // new bootstrap.Modal(document.getElementById('addressModal')).show();
        showAddressPanel();
    }

    function showAddressPanel() {
        document.getElementById('addressPanel').style.display = 'block';
    }

    function closeAddressPanel() {
        document.getElementById('addressPanel').style.display = 'none';
    }

    function showUserAddressPanel() {
        document.getElementById('corporateAddressPanel').style.display = 'block';
        document.getElementById('ulRegisteredAdd').style.display = 'block';
    }

    function CloseCorporateAddressPanel() {
        document.getElementById('corporateAddressPanel').style.display = 'none';
    }

    function bindAddressToForm(data) {
        if (!data) return;
        console.log("data", data);
        //const lines = data.line_1.split(' ');

        document.getElementById('CorporateAddress_HouseName').value = data.building_number || '';
        document.getElementById('CorporateAddress_Street').value = data.line_1.trim().replace(data.building_number, '').trim(); //lines[1] + ' ' + lines[2]?.trim() || '';
        document.getElementById('CorporateAddress_Town').value = data.town_or_city || '';
        document.getElementById('CorporateAddress_County').value = data.county || '';
        document.getElementById('CorporateAddress_PostCode').value = data.postcode || '';
        if (data.country == "England") {
            document.getElementById('CorporateAddress_Country').value = "UNITED KINGDOM";
        }
        else {
            document.getElementById('CorporateAddress_Country').value = data.country || '';
        }
    }

    function btnRemoveCorporateOfficer(id) {
        if(confirm("Are you sure you want to delete this?")) {
            $.ajax({
                url: "/FormationPage/AppointmentCorporateTab?handler=RemoveCorporateOfficer",
                type: "POST",
                data: JSON.stringify({ id: id }),
                contentType: "application/json",
                success: function () {
                    showToast("Officer Remove Successfully", "success");
                    // setTimeout(function() {
                    //     window.location.reload();
                    // }, 1000);
                },
                error: function (err) {
                    showToast("Officer is not remove", "error");
                }
            });
        }
    }

    function editCorporateOfficer(data) {
        $('.officer-corporate-is-uk-status').prop('checked', false);
        const selectedPosition = data.positionName ? data.positionName.split(',').map(p => p.trim()) : [];

        $('html, body').scrollTop($('#appointmentTab').offset().top);

        //Bind data based on Id
        setTimeout(() => {
            const positionMap = {
                "Director": "isCorporateDirector",
                "Shareholder": "isCorporateShareholder",
                "Secretary": "isCorporateSecretary",
                "PSC": "isCorporatePSC"
            };

            Object.keys(positionMap).forEach(role => {
                const checkbox = document.getElementById(positionMap[role]);
                if (checkbox) {
                    checkbox.checked = selectedPosition.includes(role);
                }
            });
        }, 100);

        $("#CorporateOfficers_CorporateOfficerId").val(data.corporateOfficerId);
        $("#CorporateOfficers_Title").val(data.title);
        $("#CorporateOfficers_FirstName").val(data.firstName);
        $("#CorporateOfficers_LastName").val(data.lastName);
        $("#CorporateOfficers_LegalName").val(data.legalName);
        $("#CorporateOfficers_RegistrationNumber").val(data.registrationNumber);
        $("#CorporateOfficers_PlaceRegistered").val(data.placeRegistered);
        $("#CorporateOfficers_RegistryHeld").val(data.registryHeld);
        $("#CorporateOfficers_LawGoverned").val(data.lawGoverned);
        $("#CorporateOfficers_LegalForm").val(data.legalForm);

        if (data.registeredInUK) {
            const corporateIsUk = document.querySelector(`.officer-corporate-is-uk-status[value="${data.registeredInUK}"]`);
            if (corporateIsUk) {
                corporateIsUk.checked = true;
            }
        }
    }
</script>
