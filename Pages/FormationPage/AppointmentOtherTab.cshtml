@page
@model Spendwise_WebApp.Pages.FormationPage.AppointmentOtherTabModel
@{
    Layout = null;
    var selected = Model.SelectedPosition;
}

@{
    var ResidentialOfficeAddress = Model.OtherAddressList.Where(x => x.IsResidetialAddress == true && x.CompanyId == Model.Company.CompanyId && x.IsCurrent == true).FirstOrDefault();
    var ServiceOfficeAddress = Model.OtherAddressList.Where(x => x.IsServiceAddress == true && x.CompanyId == Model.Company.CompanyId && x.IsCurrent == true).FirstOrDefault();
}

<div class="ef-panel-wrapper" id="appOtherTab">
    <div class="head-04" id="ef-panel-title">
        <h1>Appointments</h1>
    </div>
    <div class="" id="ef-panel-content">
        <div id="ef-panel-inner-content">
            <div id="ef-global-officer-error" class="ef-primary-error-msg ef-alert-box fail" style="display:none;">
                <div class="ef-alert-box-main-text main-error-text" id="">Sorry, there was an error on this page.</div>
            </div>
            <div class="w-tabs" id="ef-officer-form-wrapper">
                <!-- start tabs -->
                <div class="w-tab-menu ef-officer-form-tab-menu ef-other-tab">
                    <a class="tab-link w-tab-link w-inline-block" aria-current="page" data-target="#other-position">
                        <div> Position </div>
                    </a>
                    <a class="tab-link w-tab-link w-inline-block" data-target="#other-details">
                        <div> Details </div>
                    </a>
                    <a class="tab-link w-tab-link w-inline-block" data-target="#other-addressing" style="width: 130px;">
                        <div> Addressing </div>
                    </a>
                </div>
                <!-- end tabs -->
                <div id="scrollContainer">
                    <div class="tab-pane current">
                        <div id="other-position" class="appointment-section">
                            <div class="w-tab-content">
                                <div class="w-tab-pane w--tab-active ef-tab-pane-position" data-tab="position">
                                    <div class="head-01">
                                        <h1> Position </h1>
                                    </div>
                                    <div class="ef-information-box">
                                        <h2 class="ef-information-box-title">Directors and Shareholders</h2>
                                        <p>A limited company must have at least one director and one shareholder. One person may hold both of these positions. </p>
                                        <h2 class="ef-information-box-title icon">Persons with Significant Control (PSCs)</h2>
                                        <p>Any person who ultimately controls more than 25% of the company is a Person with Significant Control (PSC). </p>
                                        <p><b>It is now a legal requirement to identify the PSCs of a company. Please tick the Person with Significant Control (PSC) box if you qualify as a PSC of this company (see below).</b></p>
                                        <p>A Person with Significant Control (PSC) is anyone who meets one or more of the following conditions: </p>
                                        <ul>
                                            <li>owns more than 25% of the company’s shares.</li>
                                            <li>holds more than 25% of the company’s voting rights.</li>
                                            <li>holds the right to appoint or remove the majority of directors.</li>
                                            <li>has the right to, or actually exercises significant influence or control.</li>
                                            <li>holds the right to exercise or actually exercises significant control over a trust or company that meets one of the first 4 conditions.</li>
                                        </ul>
                                        <h3>Am I a PSC?</h3>
                                        <p>If you are a shareholder with more than 25% of the company's shares - yes, you are a PSC, and you should also <b>tick the Person with Significant Control (PSC) box below</b>. </p>
                                    </div>
                                    <div style="display:none; font-size: 20px;" class="ef-alert-box fail" id="position-error">
                                    </div>
                                    <div class="ef-form-wrap">
                                        <h2>Choose Position</h2>
                                        <div class="hr-line-1"></div>
                                        <p class="officer-extra-text mr-bot-30 fs-14 lh-18">Please tick all boxes that are relevant to this person. If this person is to hold more than one position, eg. Will be a director, shareholder and PSC, make all appointments now, by ticking 3 boxes.</p>
                                        <input type="hidden" name="officer-legal-person" id="officer-legal-person" value="1">
                                        <div class="role-select-wrapper">
                                            <div class="w-row row-role-select">
                                                <div class="w-col">
                                                    <div class="w-checkbox">
                                                        <input class="w-checkbox-input" type="checkbox" value="PSC" @(selected.Contains("PSC") ? "checked" : "") />
                                                        <label class="w-form-label" for="officer-PSC">Person with Significant Control (PSC)</label>
                                                        <span class="ef-modal-help-icon" data-ref="HELP|PSC"><img class="ef-help-icon-img" src="/assets/icons/help.png"></span>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="w-row">&nbsp;</div>
                                    <div class="w-row">
                                        <div class="w-col">
                                            <button type="button" id="btnOtherLegalPosition" class="ef-btn ef-other-save"> Save </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div id="other-details" class="appointment-section">
                            <div class="w-tab-pane ef-tab-pane-details" data-tab="Tab 3" style="display: block;">
                                <div class="head-02">
                                    <h1> Details </h1>
                                </div>
                                <div class="ef-information-box">
                                    <h2 class="ef-information-box-title">Personal Details</h2>
                                    <p>It is recommended you enter your name as it appears on your ID, eg. passport or drivers licence.</p>
                                </div>
                                <div style="display:none;" class="ef-alert-box fail" id="details-error">
                                    <div id="" class="ef-alert-box-main-text main-error-text">Please complete all required details.</div>
                                </div>
                                <div style="display:none;" class="ef-alert-box fail" id="no-officer-nationality">
                                    <span style="float:right;" class="ef-modal-help-icon nationality-help" data-ref="HELP|NATIONALITY"><img class="ef-help-icon-img" src="/assets/icons/help.png"></span>
                                    <div id="" class="ef-alert-box-main-text main-error-text"></div>
                                </div>
                                <div style="display:none; font-size: 20px;" class="ef-alert-box fail" id="address-error"> </div>
                                <div id="officer-details-div">
                                    <div class="ef-form-wrap">
                                        <h2 id="preselected-officer">
                                            Officer Details
                                        </h2>
                                        <div class="hr-line-1"></div>
                                        <div class="w-row row-margin">
                                            <div class="w-col w-col-7">
                                                <div id="officer-corporate-name-wrapper">
                                                    <label class="field-label" for="officer-corporate-name">Legal Name</label>
                                                    <input class="w-input" type="text" placeholder="Legal Name" asp-for="OtherOfficers.LegalName" />
                                                    <span class="text-address-error-message" id="OtherOfficers_LegalName_error" style="display: none;"></span>
                                                </div>
                                                <div id="officer-non-is-uk-questions-wrapper">
                                                    <label class="field-label" for="officer-corporate-law-gov">Law Governed</label>
                                                    <input class="w-input" type="text" placeholder="Law Governed" asp-for="OtherOfficers.LawGoverned" />
                                                    <span class="text-address-error-message" id="OtherOfficers_LawGoverned_error" style="display: none;"></span>

                                                    <label class="field-label" for="officer-corporate-legal-form">Legal Form</label>
                                                    <input class="w-input" type="text" placeholder="Legal Form" asp-for="OtherOfficers.LegalForm" />
                                                    <span class="text-address-error-message" id="OtherOfficers_LegalForm_error" style="display: none;"></span>
                                                </div>
                                            </div>
                                            <div class="w-row">&nbsp;</div>
                                            <!-- start res address -->
                                            <div class="w-col w-col-12" id="residential-address-wrapper">
                                                <h3 for="officer-residential-address">Address</h3>
                                                <span class="residential-address-help-text mr-bot-20 block"><strong>Please Note: It is a legal requirement to provide your actual residential address. Supplying an address which is not your actual residential address, will lead to the rejection of your new company registration.</strong></span>
                                                <div class="ef-item-box ef-selected">
                                                    <div class="ef-item-content">
                                                        <div class="w-row ef-panel-row">
                                                            <button type="button" class="ef-btn ef-select-btn" id="ExsistingAddress" onclick="showUserAddressPanel('Residential')">
                                                                Recently used addresses
                                                            </button>
                                                            <button type="button" class="ef-btn ef-select-btn" id="openPersonSecondModal" onclick="openAddressModal('Residential')">
                                                                New Address
                                                            </button>
                                                            <div class="w-col w-col-8" style="margin-top: 10px;">
                                                                <div class="">
                                                                    <span class="ef-js-forwarding-address">
                                                                        @if (ResidentialOfficeAddress != null)
                                                                        {
                                                                            @($"{ResidentialOfficeAddress.HouseName} {ResidentialOfficeAddress.Street}, {ResidentialOfficeAddress.Town}, {ResidentialOfficeAddress.County}, {ResidentialOfficeAddress.PostCode}, {ResidentialOfficeAddress.Country}")
                                                                        }
                                                                    </span>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <!-- end res address -->
                                        </div>
                                    </div>
                                </div>
                                <div class="w-row">
                                    <div class="w-col">
                                        <button type="button" id="btnSubmitOtherDetailsTab" class="ef-btn ef-other-save"> Save </button>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div id="other-addressing" class="appointment-section" style="border-bottom: none;">
                            <div class="w-tab-pane ef-tab-pane-addressing" data-tab="Tab 5" style="display: block;">
                                <div class="head-03">
                                    <h1> Addressing </h1>
                                </div>
                                <div class="ef-form-wrap" id="service-address-wrapper">
                                    <h2>Service Address</h2>
                                    <div class="hr-line-1"></div>
                                    <div class="ef-information-box">
                                        <h2 class="ef-information-box-title">Service Address</h2>
                                        <p class="service-address-p1">Directors, subscribers (shareholders at the time of company incorporation), secretaries and PSCs (eg. shareholders who own more than 25% of the company's shares) are obliged to file a Service Address with the Registrar of Companies. The Service Address is made public.</p>
                                        <p class="service-address-p2">There is nothing to stop you from using your Residential Address as your Service Address, but if you would prefer to keep this information confidential and off the public register, then using our London address will provide this confidentiality. We will then forward all statutory mail with no additional postage charges.</p>
                                    </div>
                                    <div style="display:none; font-size: 20px;" class="ef-alert-box fail" id="servicerAddress-error"> </div>
                                    <!-- use own address block -->
                                    <div class="ef-item-box  " style="" id="my-own-service-address">
                                        <div class="ef-item-content">
                                            <div class="w-row ef-panel-row">
                                                <div class="w-col">
                                                    <h3>Choose to use your own address</h3>
                                                </div>
                                            </div>
                                            <div class="ef-item-box ef-selected">
                                                <div class="ef-item-content">
                                                    <div class="w-row ef-panel-row">
                                                        <button type="button" class="ef-btn ef-select-btn" id="ExsistingAddress" onclick="showUserAddressPanel('Service')">
                                                            Recently used addresses
                                                        </button>
                                                        <button type="button" class="ef-btn ef-select-btn" id="openPersonSecondModal" onclick="openAddressModal('Service')">
                                                            New Address
                                                        </button>
                                                        <div class="w-col w-col-8" style="margin-top: 10px;">
                                                            <div class="">
                                                                <span class="service-forwarding-address">
                                                                    @if (ServiceOfficeAddress != null)
                                                                    {
                                                                        @($"{ServiceOfficeAddress.HouseName} {ServiceOfficeAddress.Street}, {ServiceOfficeAddress.Town}, {ServiceOfficeAddress.County}, {ServiceOfficeAddress.PostCode}, {ServiceOfficeAddress.Country}")
                                                                    }
                                                                </span>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <!-- -end use own address -->
                                    <!-- start 'other' products -->
                                    <div class="ef-extra-products ef-item-box service-address-upsell  " id="service-pid-22185">
                                        <div class="ef-item-content">
                                            <div class="w-row ef-panel-row ef-item-bottom-border">
                                                <div class="w-col w-col-9">
                                                    <h3 style="border-bottom: none;">Service Address - Pay Monthly</h3>
                                                </div>
                                                <div class="w-col w-col-3 w-clearfix">
                                                    <div class="w-clearfix item-box-price">
                                                        <div class="price">£2.99</div>
                                                        <div class="renewal">Renewed monthly at £2.99</div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="w-row ef-panel-row">
                                                <div class="w-col w-col-4 ef-panel-icon">
                                                    <div class="ef-product-icon ef-service-address-icon ef-product-22185">
                                                    </div>
                                                </div>
                                                <div class="w-col w-col-8">
                                                    <p></p>
                                                    <h3 class="other-service-address">Protect the privacy of your home address</h3>
                                                    <p>Use our London WC2 address as your service address<br class="m-hide"> and keep your residential address off the public record.</p>
                                                    <p><strong>London:</strong> 71-75 Shelton Street, Covent Garden, London, WC2H 9JQ</p>
                                                    <p></p>
                                                </div>
                                            </div>
                                            <div class="w-row ef-panel-row">
                                                <div class="w-col w-col-4 savings-amount-row">
                                                </div>
                                                <div class="w-col w-col-8 w-clearfix add-col">
                                                    <button type="button" class="ef-btn item-show-details collapsed" data-bs-toggle="collapse" data-bs-target="#other-address-collapse" aria-expanded="false" aria-controls="other-address-collapse"> Details</button>
                                                    <button id="ef-assign-22185" type="button" class="ef-btn ef-primary-btn ef-primary-btn__select ef-assign-select-serv-product" onclick="FormBuilder.AssignOfficerAddress('0','22185', this)">Buy Now</button>
                                                    <button id="ef-unassign-22185" type="button" class="ef-btn ef-primary-btn ef-primary-btn__remove ef-hide ef-assign-remove-serv-product" onclick="FormBuilder.RemoveOfficerAddress('0','22185', this)">Remove</button>
                                                </div>
                                            </div>
                                            <!--  item details -->
                                            <div class="ef-item-details collapse" id="other-address-collapse">
                                                <div class="w-row">
                                                    <div class="w-col w-col-12">
                                                        <h3 class="ef-other-service-address-title">Why would I use your Service Address?</h3>
                                                    </div>
                                                    <div class="w-col w-col-6">
                                                        <h4><img src="//qualityformationsblog.co.uk/dev/images/fonts/svg/shield.svg" width="50" alt="light bulb"> Protect your privacy</h4>
                                                        <p>Protect the privacy of your home with our prestigious London service address.</p>
                                                        <p>This service allows you to maintain the privacy of your home address, as our prestigious Covent Garden, London address will appear on public record as the official address of a company officer. This service includes the scanning and emailing of all official government mail addressed to a company officer, from a number of official government bodies, free of charge.</p>
                                                        <p>Mail from the following government bodies are covered by this service: Companies House, HMRC, Government Gateway, Department for Work &amp; Pensions (DWP), Office for National Statistics, Information Commissioner’s Office (ICO) and Court documents.</p>
                                                        <p>This service is renewable on a monthly basis at the cost of £2.99 +VAT.</p>
                                                    </div>
                                                    <div class="w-col w-col-6">
                                                        <h4><img src="//qualityformationsblog.co.uk/dev/images/fonts/svg/bulb.svg" width="50" alt="light bulb"> Benefits of our Service Address</h4>
                                                        <ul class="fa-ul fs-14">
                                                            <li><i class="fa-li fa fa-check fs-green" aria-hidden="true"></i> Our London service address will protect the privacy of your home address.</li>
                                                            <li><i class="fa-li fa fa-check fs-green" aria-hidden="true"></i> It prevents unsolicited mail and visitors from arriving at their private residence.</li>
                                                            <li><i class="fa-li fa fa-check fs-green" aria-hidden="true"></i> A prestigious London service address will enhance your professional image.</li>
                                                        </ul>
                                                    </div>
                                                    <div class="w-col w-col-12">
                                                        <p><strong>Please note:</strong> Forwarding of service address mail by scan and email is free of charge. Mail will be forwarded on a daily basis.</p>
                                                    </div>
                                                </div>
                                            </div>
                                            <!-- end item details -->
                                        </div>
                                    </div>
                                    <div class="hr-line-2"></div>
                                </div>
                                <div class="w-row">&nbsp;</div>
                                <div class="w-row">
                                    <div class="w-col">
                                        <button type="button" class="btn btn-success" onclick="btnBackToMainPage()">Back</button>
                                        <button type="button" id="btnSubmitOtherLegalEntityTab" class="ef-btn ef-primary-btn ef-submit-btn ef-officer-next-step"> Save & Next</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@* Choose Address Modal *@
@* <div class="modal fade" id="otherAddressModal" tabindex="-1" aria-labelledby="addressModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-scrollable">
        <div class="modal-content">

            <!-- Modal Header -->
            <div class="modal-header">
                <h5 class="modal-title" id="addressModalLabel">Forwarding Address</h5>
                <p>Tell us where to forward your mail to you, by entering your address below.</p>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            <!-- Modal Body -->
            <div class="modal-body">
                <div id="an-address" class="ef-address-form" style="">
                    <div>
                        <div id="use-previous-address-or-search" class="address-form-div" style="display:block">
                            <h4>Recently used addresses</h4>

                            <div id="residentialAddressSection" class="address-section">
                                @foreach (var item in Model.OtherAddressList.Where(x => x.IsResidetialAddress == true))
                                {
                                    <div class="w-clearfix simple-row-elem">
                                        <div class="w-row ef-panel-row">
                                            <div class="w-col w-col-8">
                                                <p>@item.HouseName, @item.Street, @item.Town, @item.County, @item.PostCode, @item.Country</p>
                                            </div>
                                            <div class="w-col w-col-4 w-clearfix add-col">
                                                <button type="button" class="ef-btn ef-alt-address-btn" onclick='editOtherAddress(@Html.Raw(Json.Serialize(item)))'>Edit</button>
                                                <button type="button" class="ef-btn ef-select-btn" onclick='selectOtherAddress(@Html.Raw(Json.Serialize(item)))'>Select</button>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>

                            <div id="serviceAddressSection" class="address-section">
                                @foreach (var item in Model.OtherAddressList.Where(x => x.IsServiceAddress == true))
                                {
                                    <div class="w-clearfix simple-row-elem">
                                        <div class="w-row ef-panel-row">
                                            <div class="w-col w-col-8">
                                                <p>@item.HouseName, @item.Street, @item.Town, @item.County, @item.PostCode, @item.Country</p>
                                            </div>
                                            <div class="w-col w-col-4 w-clearfix add-col">
                                                <button type="button" class="ef-btn ef-alt-address-btn" onclick='editOtherAddress(@Html.Raw(Json.Serialize(item)))'>Edit</button>
                                                <button type="button" class="ef-btn ef-select-btn" onclick='selectOtherAddress(@Html.Raw(Json.Serialize(item)))'>Select</button>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>

                            <h4>Or enter a new Address</h4>

                            <div class="w-clearfix simple-row-elem">
                                <div class="w-row ef-panel-row">
                                    <div class="w-col w-col-8">
                                        <p>Enter new Address</p>
                                    </div>
                                    <div class="w-col w-col-4 w-clearfix add-col">
                                        <button type="button" class="ef-btn ef-select-btn" id="openOtherSecondModal">Select</button>
                                    </div>
                                </div>

                            </div>

                            <div lass="ef-cancel-btn-wrapper">
                                <div class="w-clearfix">
                                    <button type="button" class="ef-btn ef-cancel-address" data-bs-dismiss="modal">Cancel</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
 *@
<div class="modal fade" id="inOtherSecondAddressModal" tabindex="-1" aria-labelledby="addressModalLabel" aria-hidden="true">
    <input type="hidden" id="hndAddressType" name="hndAddressType" value="" />
    <div class="modal-dialog modal-lg modal-dialog-scrollable">
        <div class="modal-content">

            <!-- Modal Header -->
            <div class="modal-header">
                <h5 class="modal-title" id="addressModalLabel">Forwarding Address</h5>
                <p>Tell us where to forward your mail to you, by entering your address below.</p>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            <!-- Modal Body -->
            <div class="modal-body">
                <div style="" class="address-form-div w-clearfix" id="an-address-form" name="an-address-form">
                    <div class="w-row row-margin ef-postcode-lookup-wrapper">
                        <div class="w-col w-col-6">
                            <label for="postcode-lookup">Post Code</label>
                            <input class="w-input postal-lookup postcode" id="other-postcode-lookup" type="text" placeholder="Enter your postal code" name="postcode-lookup">
                        </div>
                        <div class="w-col w-col-3">
                            <label for="postcode-lookup">&nbsp;</label>
                            <button type="button" class="ef-add-btn ef-postcode-lookup-btn" onclick="appointmentPostCodeLookup()">Find Address</button>
                        </div>
                    </div>

                    <input type="hidden" asp-for="OtherAddress.AddressId" />

                    <label for="address-line-1">Name/Number <span>*</span></label>
                    <input class="w-input" asp-for="OtherAddress.HouseName" type="text" placeholder="Enter House Name/Number" />
                    <span class="text-address-error-message" id="OtherAddress_HouseName_error" style="display: none;"></span>

                    <label for="address-line-2">Street <span>*</span></label>
                    <input class="w-input" asp-for="OtherAddress.Street" type="text" placeholder="Enter Street" />
                    <span class="text-address-error-message" id="OtherAddress_Street_error" style="display: none;"></span>

                    <label for="address-line-3">Locality</label>
                    <input class="w-input" asp-for="OtherAddress.Locality" type="text" placeholder="Enter Locality" />

                    <label for="address-line-4">Town <span>*</span></label>
                    <input class="w-input" asp-for="OtherAddress.Town" type="text" placeholder="Enter Town" />
                    <span class="text-address-error-message" id="OtherAddress_Town_error" style="display: none;"></span>

                    <label for="address-line-5" class="address-line-5">County</label>
                    <input class="w-input address-line-5" asp-for="OtherAddress.County" type="text" placeholder="Enter County" />

                    <div class="w-row last-margin">
                        <div class="w-col w-col-6 ef-country-col">
                            <label for="address-country">Country <span>*</span></label>
                            <select class="w-select" asp-for="OtherAddress.Country">
                                <option value="AFGHANISTAN">Afghanistan</option>
                                <option value="ALBANIA">Albania</option>
                                <option value="ALGERIA">Algeria</option>
                                <option value="ANDORRA">Andorra</option>
                                <option value="ANGOLA">Angola</option>
                                <option value="ARGENTINA">Argentina</option>
                                <option value="ARMENIA">Armenia</option>
                                <option value="AUSTRALIA">Australia</option>
                                <option value="AUSTRIA">Austria</option>
                                <option value="AZERBAIJAN">Azerbaijan</option>
                                <option value="BAHAMAS">Bahamas</option>
                                <option value="BAHRAIN">Bahrain</option>
                                <option value="BANGLADESH">Bangladesh</option>
                                <option value="BELARUS">Belarus</option>
                                <option value="BELGIUM">Belgium</option>
                                <option value="BELIZE">Belize</option>
                                <option value="BENIN">Benin</option>
                                <option value="BHUTAN">Bhutan</option>
                                <option value="BOLIVIA">Bolivia</option>
                                <option value="BOSNIA AND HERZEGOVINA">Bosnia and Herzegovina</option>
                                <option value="BOTSWANA">Botswana</option>
                                <option value="BRAZIL">Brazil</option>
                                <option value="BRUNEI">Brunei</option>
                                <option value="BULGARIA">Bulgaria</option>
                                <option value="BURKINA FASO">Burkina Faso</option>
                                <option value="BURUNDI">Burundi</option>
                                <option value="CAMBODIA">Cambodia</option>
                                <option value="CAMEROON">Cameroon</option>
                                <option value="CANADA">Canada</option>
                                <option value="CHILE">Chile</option>
                                <option value="CHINA">China</option>
                                <option value="COLOMBIA">Colombia</option>
                                <option value="COSTA RICA">Costa Rica</option>
                                <option value="CROATIA">Croatia</option>
                                <option value="CYPRUS">Cyprus</option>
                                <option value="CZECH REPUBLIC">Czech Republic</option>
                                <option value="DENMARK">Denmark</option>
                                <option value="EGYPT">Egypt</option>
                                <option value="ESTONIA">Estonia</option>
                                <option value="FINLAND">Finland</option>
                                <option value="FRANCE">France</option>
                                <option value="GEORGIA">Georgia</option>
                                <option value="GERMANY">Germany</option>
                                <option value="GHANA">Ghana</option>
                                <option value="GREECE">Greece</option>
                                <option value="HONG KONG">Hong Kong</option>
                                <option value="HUNGARY">Hungary</option>
                                <option value="ICELAND">Iceland</option>
                                <option value="INDIA">India</option>
                                <option value="INDONESIA">Indonesia</option>
                                <option value="IRAN">Iran</option>
                                <option value="IRAQ">Iraq</option>
                                <option value="IRELAND">Ireland</option>
                                <option value="ISRAEL">Israel</option>
                                <option value="ITALY">Italy</option>
                                <option value="JAPAN">Japan</option>
                                <option value="JORDAN">Jordan</option>
                                <option value="KENYA">Kenya</option>
                                <option value="KUWAIT">Kuwait</option>
                                <option value="LATVIA">Latvia</option>
                                <option value="LEBANON">Lebanon</option>
                                <option value="LITHUANIA">Lithuania</option>
                                <option value="LUXEMBOURG">Luxembourg</option>
                                <option value="MALAYSIA">Malaysia</option>
                                <option value="MALTA">Malta</option>
                                <option value="MEXICO">Mexico</option>
                                <option value="MOROCCO">Morocco</option>
                                <option value="NEPAL">Nepal</option>
                                <option value="NETHERLANDS">Netherlands</option>
                                <option value="NEW ZEALAND">New Zealand</option>
                                <option value="NIGERIA">Nigeria</option>
                                <option value="NORWAY">Norway</option>
                                <option value="PAKISTAN">Pakistan</option>
                                <option value="PHILIPPINES">Philippines</option>
                                <option value="POLAND">Poland</option>
                                <option value="PORTUGAL">Portugal</option>
                                <option value="QATAR">Qatar</option>
                                <option value="ROMANIA">Romania</option>
                                <option value="RUSSIA">Russia</option>
                                <option value="SAUDI ARABIA">Saudi Arabia</option>
                                <option value="SINGAPORE">Singapore</option>
                                <option value="SLOVAKIA">Slovakia</option>
                                <option value="SLOVENIA">Slovenia</option>
                                <option value="SOUTH AFRICA">South Africa</option>
                                <option value="SOUTH KOREA">South Korea</option>
                                <option value="SPAIN">Spain</option>
                                <option value="SRI LANKA">Sri Lanka</option>
                                <option value="SWEDEN">Sweden</option>
                                <option value="SWITZERLAND">Switzerland</option>
                                <option value="SYRIA">Syria</option>
                                <option value="TAIWAN">Taiwan</option>
                                <option value="THAILAND">Thailand</option>
                                <option value="TUNISIA">Tunisia</option>
                                <option value="TURKEY">Turkey</option>
                                <option value="UGANDA">Uganda</option>
                                <option value="UKRAINE">Ukraine</option>
                                <option value="UNITED ARAB EMIRATES">United Arab Emirates</option>
                                <option value="UNITED KINGDOM">United Kingdom</option>
                                <option value="UNITED STATES">United States</option>
                                <option value="URUGUAY">Uruguay</option>
                                <option value="VIETNAM">Vietnam</option>
                                <option value="YEMEN">Yemen</option>
                                <option value="ZAMBIA">Zambia</option>
                                <option value="ZIMBABWE">Zimbabwe</option>
                            </select>
                        </div>

                        <div class="w-col w-col-6 postcode-col">
                            <label for="address-postcode" id="address-postcode-label">
                                Postal Code
                                <span>
                                    *
                                </span>
                            </label>
                            <input class="w-input postcode" asp-for="OtherAddress.PostCode" type="text" placeholder="Enter Postcode" />
                            <span class="text-address-error-message" id="OtherAddress_PostCode_error" style="display: none;"></span>
                        </div>
                    </div>
                    <button type="button" class="ef-add-btn ef-cancel-forward-address" data-bs-dismiss="modal" onclick="javascript:void(0)">Cancel</button>
                    <button type="button" class="ef-add-btn ef-save-address-btn" onclick="saveChooseAddressData()">Save &amp; Continue</button>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="addressPanel" class="address-panel shadow p-3" style="display:none;">
    <h5>Select an Address</h5>
    <ul id="PostCodeAddressList" class="list-group address-scroll mt-3"></ul>
    <button class="btn btn-secondary mt-2" onclick="closeAddressPanel()">Close</button>
</div>

<div id="otherLegalAddressPanel" class="address-panel shadow p-3" style="display:none;">
    <h5>Select an Address</h5>
    <button class="btn btn-secondary mt-2" onclick="CloseOtherLegalAddressPanel()">Close</button>
    <ul id="ulResidentialAdd" style="display:none;">
        @foreach (var item in Model.OtherAddressList.Where(x => x.IsResidetialAddress))
        {
            <li class="list-group-item d-flex justify-content-between align-items-center">
                <span>
                    @item.HouseName @item.Street, @item.Town, @item.County, @item.PostCode, @item.Country
                </span>
                <button type="button"
                        class="btn btn-success btn-sm"
                        onclick='selectAddress(@Html.Raw(Json.Serialize(item)))'>
                    Select
                </button>
            </li>
        }
    </ul>
    <ul id="ulServiceAdd" style="display:none;">
        @foreach (var item in Model.OtherAddressList.Where(x => x.IsServiceAddress))
        {
            <li class="list-group-item d-flex justify-content-between align-items-center">
                <span>
                    @item.HouseName @item.Street, @item.Town, @item.County, @item.PostCode, @item.Country
                </span>
                <button type="button"
                        class="btn btn-success btn-sm"
                        onclick='selectAddress(@Html.Raw(Json.Serialize(item)))'>
                    Select
                </button>
            </li>
        }
    </ul>
</div>

<script>
    let addressType = null;
    $("#btnOtherLegalPosition").click(function () {
        var selectedData = [];
        $(".w-checkbox-input:checked").each(function () {
            selectedData.push($(this).val());
        });

        if (selectedData?.length === 0) {
            $("#position-error").html("Please select the Position.").show();
        }
        else{
            $("#position-error").html("Please select the Position.").hide();
        }

        const selectedPosition = selectedData.join(",");

        $.ajax({
            url: "/FormationPage/AppointmentOtherTab?handler=SaveOtherPositionData",
            method: "POST",
            contentType: "application/json",
            data: JSON.stringify({ position: selectedPosition }),
            success: function (response) {
                if (response.success) {
                    showToast('Position Data Saved.', 'success');
                    console.log(response.success);
                }
            },
            error: function (xhr) {
                console.error("Error:", xhr.statusText, xhr.responseText);
            }
        });
    });

    $("#btnSubmitOtherDetailsTab").click(function () {
       var isValid = true;

        // Field validation helper
        function validateField(id, errorId, fieldName) {
            const value = $(id).val().trim();
            if (value === "") {
                isValid = false;
                $(errorId).text(`${fieldName} is required.`).show();
            } else {
                $(errorId).text("").hide();
            }
        }

        validateField("#OtherOfficers_LegalName", "#OtherOfficers_LegalName_error", "LegalName");
        validateField("#OtherOfficers_LawGoverned", "#OtherOfficers_LawGoverned_error", "LawGoverned");
        validateField("#OtherOfficers_LegalForm", "#OtherOfficers_LegalForm_error", "LegalForm");

        if(isValid) {
            saveOtherChooseAddressData('Residential');
            var formData = {
                LegalName: $('#OtherOfficers_LegalName').val(),
                LawGoverned: $('#OtherOfficers_LawGoverned').val(),
                LegalForm: $('#OtherOfficers_LegalForm').val(),
            }

            $.ajax({
                url: "/FormationPage/AppointmentOtherTab?handler=SaveLegalOfficerDetails",
                method: "POST",
                contentType: "application/json",
                data: JSON.stringify(formData),
                success: function (response) {
                    if (response.success) {
                        console.log(response.success);
                        showToast('Data Saved.', 'success');
                    }
                },
                error: function (xhr) {
                    console.error("Error:", xhr.statusText, xhr.responseText);
                }
            });
        }
    });

    // Open Second Modal
    $('#openOtherSecondModal').on('click', function () {
        $('#addressModal').modal('hide');

        $('#addressModal').on('hidden.bs.modal', function () {
            $('#inOtherSecondAddressModal').modal('show');
        });
    });

    function openAddressModal(type) {
        // Set the type: "Registered" or "Business"
        $('#inOtherSecondAddressModal').find("input").val("");
        $('#hndAddressType').val(type);
        $('#inOtherSecondAddressModal').modal('show');
    }

    function saveChooseAddressData() {
        var isValid = true;

        // Field validation helper
        function validateFields(id, errorId, fieldName) {
            const value = $(id).val().trim();
            if (value === "") {
                isValid = false;
                $(errorId).text(`${fieldName} is required.`).show();
            } else {
                $(errorId).text("").hide();
            }
        }

        validateFields("#OtherAddress_HouseName", "#OtherAddress_HouseName_error", "House Name");
        validateFields("#OtherAddress_Street", "#OtherAddress_Street_error", "Street");
        validateFields("#OtherAddress_Town", "#OtherAddress_Town_error", "Town");
        validateFields("#OtherAddress_PostCode", "#OtherAddress_PostCode_error", "Postcode");

        if (isValid) {
            var type = $('#hndAddressType').val();
            if (type === 'Residential') {
                $(".ef-js-forwarding-address").html("");
                const houseName = $("#OtherAddress_HouseName").val();
                const otherParts = [
                    $("#OtherAddress_Street").val(),
                    $("#OtherAddress_Town").val(),
                    $("#OtherAddress_County").val(),
                    $("#OtherAddress_PostCode").val(),
                    $("#OtherAddress_Country").val()
                ].filter(Boolean);
                const addressHtml = (houseName ? houseName + ' ' : '') + otherParts.join(', ');
                $(".ef-js-forwarding-address").html(addressHtml);
            } else if (type === 'Service') {
                $(".service-forwarding-address").html("");
                const houseName = $("#OtherAddress_HouseName").val();
                const otherParts = [
                    $("#OtherAddress_Street").val(),
                    $("#OtherAddress_Town").val(),
                    $("#OtherAddress_County").val(),
                    $("#OtherAddress_PostCode").val(),
                    $("#OtherAddress_Country").val()
                ].filter(Boolean);
                const addressHtml = (houseName ? houseName + ' ' : '') + otherParts.join(', ');
                $(".service-forwarding-address").html(addressHtml);
            }

            $("#inOtherSecondAddressModal").modal("hide");
        }
    }

    function saveOtherChooseAddressData(type) {
        const registeredOfficeAddress = {
             houseName: "@(ResidentialOfficeAddress?.HouseName ?? "")",
             street: "@(ResidentialOfficeAddress?.Street ?? "")",
             postCode: "@(ResidentialOfficeAddress?.PostCode ?? "")",
             town: "@(ResidentialOfficeAddress?.Town ?? "")",
             country: "@(ResidentialOfficeAddress?.Country ?? "")",
             county: "@(ResidentialOfficeAddress?.County ?? "")",
             locality: "@(ResidentialOfficeAddress?.Locality ?? "")"
        };

         const serviceAddress = {
             houseName: "@(ServiceOfficeAddress?.HouseName ?? "")",
             street: "@(ServiceOfficeAddress?.Street ?? "")",
             postCode: "@(ServiceOfficeAddress?.PostCode ?? "")",
             town: "@(ServiceOfficeAddress?.Town ?? "")",
             country: "@(ServiceOfficeAddress?.Country ?? "")",
             county: "@(ServiceOfficeAddress?.County ?? "")",
             locality: "@(ServiceOfficeAddress?.Locality ?? "")"
         };

        let addressData = {
            addressId: parseInt($("#OtherAddress_AddressId").val()) || 0,
            houseName: $("#OtherAddress_HouseName").val(),
            street: $("#OtherAddress_Street").val(),
            postCode: $("#OtherAddress_PostCode").val(),
            town: $("#OtherAddress_Town").val(),
            country: $("#OtherAddress_Country").val(),
            county: $("#OtherAddress_County").val(),
            locality: $("#OtherAddress_Locality").val()
        };

        if(type == "Residential") {
            if ($("#OtherAddress_HouseName").val() == "" && $("#OtherAddress_Street").val() == "") {
                addressData = registeredOfficeAddress;
            }
            $.ajax({
                url: "/FormationPage/AppointmentOtherTab?handler=SaveOtherResidentialAddress",
                method: "POST",
                contentType: "application/json",
                data: JSON.stringify(addressData),
                success: function (response) {
                    if (!response.success) {
                        // Loop through returned errors and set messages
                        for (const [field, message] of Object.entries(response.errors)) {
                            const errorSpan = document.getElementById(`${field}-error`);
                            if (errorSpan) {
                                errorSpan.textContent = message;
                            }
                        }
                    }
                    else {
                        console.log("Success:", response);
                        $("#inOtherSecondAddressModal").modal('hide');
                        $("#otherAddressModal").modal('hide');
                    }
                },
                error: function (xhr) {
                    console.error("Error:", xhr.statusText, xhr.responseText);
                }
            });
        }
        else if (type == "Service"){
            if ($("#OtherAddress_HouseName").val() == "" && $("#OtherAddress_Street").val() == "") {
                addressData = serviceAddress;
            }
            $.ajax({
                url: "/FormationPage/AppointmentOtherTab?handler=SaveOtherServiceAddress",
                method: "POST",
                contentType: "application/json",
                data: JSON.stringify(addressData),
                success: function (response) {
                    if (!response.success) {
                        // Loop through returned errors and set messages
                        for (const [field, message] of Object.entries(response.errors)) {
                            const errorSpan = document.getElementById(`${field}-error`);
                            if (errorSpan) {
                                errorSpan.textContent = message;
                            }
                        }
                    }
                    else {
                        $("#inOtherSecondAddressModal").modal('hide');
                        $("#otherAddressModal").modal('hide');
                    }
                },
                error: function (xhr) {
                    console.error("Error:", xhr.statusText, xhr.responseText);
                }
            });
        }
    }

    function editOtherAddress(data) {
        $("#OtherAddress_AddressId").val(data.addressId); // Ensure your model has Id

        $("#OtherAddress_HouseName").val(data.houseName);
        $("#OtherAddress_Street").val(data.street);
        $("#OtherAddress_Locality").val(data.locality);
        $("#OtherAddress_Town").val(data.town);
        $("#OtherAddress_County").val(data.county);
        $("#OtherAddress_Country").val(data.country);
        $("#OtherAddress_PostCode").val(data.postCode);

        // Clear error messages
        $(".text-address-error-message").hide().text("");

        $("#inOtherSecondAddressModal").modal("show");
    }

    function selectOtherAddress(data) {
        if (data.isResidetialAddress == true) {
            const addressHtml = `${data.houseName}, ${data.street}, ${data.town}, ${data.county}, ${data.postCode}, ${data.country}`;
            $(".other-officer-residential-address").html(addressHtml);
        }
        else if (data.isServiceAddress == true) {
            const addressHtml = `${data.houseName}, ${data.street}, ${data.town}, ${data.county}, ${data.postCode}, ${data.country}`;
            $(".other-officer-service-address").html(addressHtml);
        }
        $("#OtherAddress_HouseName").val(data.houseName);
        $("#OtherAddress_Street").val(data.street);
        $("#OtherAddress_Locality").val(data.locality);
        $("#OtherAddress_Town").val(data.town);
        $("#OtherAddress_County").val(data.county);
        $("#OtherAddress_Country").val(data.country);
        $("#OtherAddress_PostCode").val(data.postCode);
        ClosePersonAddressPanel();
    }

    $("#btnSubmitOtherLegalEntityTab").click(function () {
        var isValid = true;
        var selectedData = [];
        $(".w-checkbox-input:checked").each(function () {
            selectedData.push($(this).val());
        });

        // var residentialAdd = $(".other-officer-residential-address").text().replace(/[\s\d.]+/g, '');
        // var serviceAdd = $(".other-officer-service-address").text().replace(/[\s\d.]+/g, '');
        // if(residentialAdd == "NoneSelected"){
        //     isValid = false;
        //     showToast('Please filled required details.', 'warning');
        //     $("#address-error").html("Please select the Residential Address.").show();
        // }
        // else {
        //     isValid = true;
        //     $("#address-error").html("Please select the Residential Address.").hide();
        // }

        // if(serviceAdd == "NoneSelected"){
        //     isValid = false;
        //     showToast('Please filled required details.', 'warning');
        //     $("#servicerAddress-error").html("Please select the Service Address.").show();
        // }
        // else{
        //     $("#servicerAddress-error").html("Please select the Service Address.").hide();
        // }

        if (selectedData?.length === 0) {
            isValid = false;
            $("#position-error").html("Please select the Position.").show();
            showToast('Please filled required details.', 'warning');
        }
        else{
            isValid = true;
            $("#position-error").html("Please select the Position.").hide();
        }

        // Field validation helper
        function validateField(id, errorId, fieldName) {
            const value = $(id).val().trim();
            if (value === "") {
                isValid = false;
                $(errorId).text(`${fieldName} is required.`).show();
                showToast('Please filled required details.', 'warning');
            } else {
                $(errorId).text("").hide();
            }
        }

        validateField("#OtherOfficers_LegalName", "#OtherOfficers_LegalName_error", "LegalName");
        validateField("#OtherOfficers_LawGoverned", "#OtherOfficers_LawGoverned_error", "LawGoverned");
        validateField("#OtherOfficers_LegalForm", "#OtherOfficers_LegalForm_error", "LegalForm");

        if(isValid) {
            saveOtherChooseAddressData('Service');
             $.ajax({
                url: "/FormationPage/AppointmentOtherTab?handler=SaveAllTab",
                method: "POST",
                success: function (response) {
                    if (response.success) {
                        showToast('All Data Saved.', 'success');
                        window.location.reload();
                        $('html, body').scrollTop($('#appointment').offset().top);
                    }
                },
                error: function (xhr) {
                    console.error("Error:", xhr.statusText, xhr.responseText);
                }
            });
        }
    });

    function appointmentPostCodeLookup() {
        const postCode = $("#other-postcode-lookup").val();

        if (!postCode) {
            alert("Please enter a postcode.");
            return;
        }

        $.ajax({
            type: "GET",
            url: `/register?handler=CheckPostCode&postCode=${encodeURIComponent(postCode)}`,
            dataType: "json",
            success: function (response) {
                if (!response.success || !Array.isArray(response.suggestions)) {
                    alert("No suggestions found.");
                    return;
                }
                console.log("response", response);
                console.log("response.suggestions", response.suggestions);

                populateAddressList(response.suggestions);
            },
            error: function (xhr) {
                console.error("AJAX error:", xhr);
                alert("Error fetching postcode suggestions.");
            }
        });
    }

    function populateAddressList(suggestions) {
        const list = document.getElementById("PostCodeAddressList");
        list.innerHTML = ''; // Clear previous items

        suggestions.forEach(item => {
            const li = document.createElement("li");
            li.className = "list-group-item d-flex justify-content-between align-items-center";

            const addressText = document.createElement("span");
            addressText.textContent = item.address;

            const selectBtn = document.createElement("button");
            selectBtn.className = "btn btn-success btn-sm";
            selectBtn.textContent = "Select";
            selectBtn.dataset.addressId = item.id;

            // 👇 API call on select
            selectBtn.onclick = function () {
                const id = this.dataset.addressId;
                const apiKey = 'k2fpqS_lSUeh0z2ISb57ng45543'; // Replace with actual or server-stored key
                const url = `https://api.getaddress.io/get/${id}?api-key=${apiKey}`;

                fetch(url)
                    .then(response => response.json())
                    .then(data => {
                        console.log("Full address data:", data);
                        bindAddressToForm(data);
                        //bootstrap.Modal.getInstance(document.getElementById('addressModal')).hide();
                        closeAddressPanel();
                    })
                    .catch(err => {
                        console.error("Error fetching full address:", err);
                        alert("Unable to fetch full address details.");
                    });
            };

            li.appendChild(addressText);
            li.appendChild(selectBtn);
            list.appendChild(li);
        });

        // new bootstrap.Modal(document.getElementById('addressModal')).show();
        showAddressPanel();
    }

    function showAddressPanel() {
        document.getElementById('addressPanel').style.display = 'block';
    }

    function closeAddressPanel() {
        document.getElementById('addressPanel').style.display = 'none';
    }

    function showUserAddressPanel(type) {
        document.getElementById('otherLegalAddressPanel').style.display = 'block';
        if (type === 'Residential') {
            document.getElementById('ulServiceAdd').style.display = 'none';
            document.getElementById('ulResidentialAdd').style.display = 'block';
        } else if (type === 'Service') {
            document.getElementById('ulResidentialAdd').style.display = 'none';
            document.getElementById('ulServiceAdd').style.display = 'block';
        }
    }

    function CloseOtherLegalAddressPanel() {
        document.getElementById('otherLegalAddressPanel').style.display = 'none';
    }

    function bindAddressToForm(data) {
        if (!data) return;
        console.log("data", data);
        //const lines = data.line_1.split(' ');

        document.getElementById('OtherAddress_HouseName').value = data.building_number || '';
        document.getElementById('OtherAddress_Street').value = data.line_1.trim().replace(data.building_number, '').trim(); //lines[1] + ' ' + lines[2]?.trim() || '';
        document.getElementById('OtherAddress_Town').value = data.town_or_city || '';
        document.getElementById('OtherAddress_County').value = data.county || '';
        document.getElementById('OtherAddress_PostCode').value = data.postcode || '';
        if (data.country == "England") {
            document.getElementById('OtherAddress_Country').value = "UNITED KINGDOM";
        }
        else {
            document.getElementById('OtherAddress_Country').value = data.country || '';
        }
    }
</script>

